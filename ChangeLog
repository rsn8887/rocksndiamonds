2015-06-21
	* extended automatic tape playing modes:
	  - "autotest" to automatically test tapes (this was "autoplay" before)
	  - "autoplay" to automatically play tapes (visibly)
	  - "autoffwd" to automatically play tapes (visibly, with maximum speed)

2015-06-16
	* fixed and enhanced screen fading and background/border handling

2015-05-31
	* added setup option to enable/disable (now optional) snapshot buttons

2015-04-22
	* added lag prevention to door/request/envelope animations

2015-04-15
	* added option "program_icon_file" to run-time "special edition" support

2015-04-14
	* added run-time "special edition" support;
	  this change is especially targeted to the "R'n'D jue" special edition
	  of R'n'D, which changed some defaults at compile-time in previous
	  versions, like:
	  - using a different default artwork set (with fallback artwork for
	    classic artwork not existing in the special edition),
	  - using a different default level set,
	  - using a different program name and user data directory,
	  - starting with different default setup values and
	  - using custom artwork even at a very early stage of startup
	    (like initial fonts and initial loading/busy animation);
	  these changes can now all be accomplished at run-time by using a new
	  program-specific configuration file in the same location and with the
	  same name as the game binary (minus a potential binary file extension
	  ".exe", plus a configuration file extension ".conf", so a binary file
	  "rnd_jue.exe" would be complemented by a new file "rnd_jue.conf" in
	  the same directory);
	  this config file can contain all options found in "setup.conf" plus
	  the following new, internal "special edition" default settings:
	  - program_title (like "R'n'D jue")
	  - program_author (like "Juergen Bonhagen")
	  - program_email (like "jue@artsoft.org")
	  - program_website (like "http://jue.artsoft.org/")
	  - program_copyright (like "(c) 2015 by jue")
	  - program_company (like "A game by jue")
	  - default_graphics_set (like "jue0")
	  - default_sounds_set (like "jue0")
	  - default_music_set (like "jue0")
	  - fallback_graphics_file (like "fallback.png")
	  - fallback_sounds_file (like "fallback.wav")
	  - fallback_music_file (like "fallback.wav")
	  - default_level_series (like "jue_start")
	  - choose_from_top_leveldir ("true" or "false")
	  where the "default" artwork set definitions are used to specify new
	  default artwork that replaces the "classic" artwork sets, while the
	  "fallback" settings specify artwork files used for all artwork files
	  that would exist in the classic artwork sets, but are not defined or
	  cannot be found in the new default artwork set; the program title is
	  used for things like window title, title screens and user data folder
	  name, and the entry point for choosing a level set can be changed
	  from the current level set location to the topmost level tree node

2015-04-07
	* added sound definitions for pressing and releasing main menu buttons

2015-03-31
	* fixed slow tape quick-loading due to unneeded tape area update

2015-03-30
	* replaced stop/play buttons in game panel with save/load buttons

2015-03-24
	* added step-based engine snapshots to undo/redo single steps in game

2015-03-19
	* fixed (swapped) editor zoom directions for '-' and '+' (keypad) keys

2015-03-18
	* added dynamically configurable graphics and layout of editor gadgets

2015-03-11
	* fixed (swapped) editor zoom directions for left and right mouse button

2015-03-10
	* added main menu backlink to level set selection screen

2015-03-07
	* added support for gadget-like pressable menu buttons on main screen

2015-03-02
	* added classic graphics, sounds and music to git repository
	* added classic level sets to git repository
	* added element description files to git repository
	* changed mouse cursor on title screens not being always invisible
	* added manually edited non-preset audio volume values to select list
	  (if sound, loops or music volume was manually edited in "setup.conf")

2015-02-27
	* fixed using "background.TOOLBOX", which was simply ignored before

2015-02-23
	* added key pad '-', '+' and '0' keys to zoom function in level editor
	* changed editor key shortcut for undo/redo to 'u' and 'Shift-u'
	* fixed using 'PageUp' and 'PageDown' keys for element list in editor

2015-02-21
	* added 1%, 2% and 5% to volume controls for sound and music settings

2015-02-14
	* fixed bug with editor border element not adjusted after resizing level
	* changed unused playfield from "default" to "empty" after loading level
	* increased number of undo/redo steps in level editor from 10 to 64

2015-02-13
	* added zoom functionality for playfield drawing area to level editor
	  (use left, right and middle mouse buttons on new "zoom" toolbox button
	  or use keys '-', '+' and '0' to zoom out, in or reset to default size)

2015-02-11
	* fixed bug not updating game panel values in visible warp forward mode

2015-02-10
	* changed position of CE/GE use/save template gadgets to be visually
	  separated from other CE/GE gadgets (to prevent accidental use)
	* fixed bug in editor when using undo after rotating level repeatedly
	* added 'redo' functionality to editor (by pressing 'undo' with right
	  mouse button or by using key shortcut "Shift-R")

2015-02-04
	* added configurability of editor control buttons (toolbox buttons)

2015-02-03
	* finished configurability of tape date and time display positions
	* fixed bug with game buttons in tape area not properly redrawn
	* fixed small graphical bug with default tape time display position
	* added optionally configurable game frame counter to tape display

2015-02-02
	* fixed configurability of editor element palette (for columns != 4)

2015-01-29
	* improved configurability of tape date and time display positions
	* added configurability of element properties button in editor
	* added build dependency for auto-conf files

2015-01-27
	* added looking for editor element descriptions in level set directory
	  (for example, in file "<my-level-folder>/docs/elements/custom_1.txt")

2015-01-25
	* moved "element properties" button in editor from toolbox to palette
	* added "zoom level tile size" button in editor to toolbox (currently
	  no function behind it; will be used to zoom level editor playfield)
	* added key shortcuts '1' to '3' to view properties of drawing elements
	* fixed gadget display bug in editor (door 1 area) after test playing
	* fixed bugs when changing drawing area gadgets (like group elements)

2015-01-19
	* re-enabled editor palette element options in setup configuration file

2014-12-13
	* fixed loading custom PCX image files with default artwork file names
	  (like "RocksDoor.pcx") which are not redefined in artwork config file
	  (this is a special fix for Zelda 2 and probably some other existing
	  level sets which use new graphics which are not defined in the file
	  "graphicsinfo.conf", but use a file name of one of default graphics
	  (like "RocksScreen.pcx"); this did not work anymore for PCX files
	  since the default graphics files have been changed to PNG files, so
	  different file names are checked now (like "RocksScreen.png"), so if
	  the PNG files cannot be found, the old PCX files are also checked)

2014-12-03
	* added some more graphics customization options for the level editor:
	  - editor.button.prev_level (position)
	  - editor.button.next_level (position)
	  - editor.input.level_number (position)
	  - editor.palette.tile_size (tile size for palette elements)
	  - editor.palette.element_left.tile_size (draw element tile size)
	  - editor.palette.element_middle.tile_size (draw element tile size)
	  - editor.palette.element_right.tile_size (draw element tile size)
	  - editor.input.gfx.level_number (current level number input field)

2014-11-22
	* fixed menu display bugs caused by drawing outside menu area (again)

2014-11-19
	* fixed broken door animations when switching between custom graphics

2014-11-06
	* fixed layout for "level set info" to support custom playfield size
	* fixed changing from title to info screen with custom playfield size

2014-11-02
	* fixed bug with not updating default bitmap pointer for scaled images
	* fixed redraw/fade bugs when redefining the playfield size or position

2014-10-27
	* fixed some smaller issues with loading custom artwork

2014-10-22
	* added warnings when using undefined element and graphic names in
	  custom artwork definitions (like ".crumbled_like" or ".clone_from")
	* added setting default filenames for all cloned graphics in static
	  graphics configuration on startup (to be able to fall back later)

2014-10-20
	* fixed using buttons on main screen with size other than 32x32 pixels
	* fixed some initialization bugs for scrollbars and main screen buttons
	* fixed bug when drawing non-element graphics (without separate in-game
	  graphic/bitmap defined) while non-standard game tile size is defined

2014-10-17
	* removed some remaining unused X11 stuff
	* fixed bug with potentially suppressed exit error message on startup

2014-10-16
	* fixed bug not loading tape when selecting level from level selection
	  screen (thanks to filbo for finding this bug and supplying a patch)

2014-10-15
	* fixed menu display bugs (drawing outside menu area with draw offset)
	* fixed menu key navigation bugs (when using smaller menu list size)

2014-10-14
	* added support for animated door parts during opening/closing movement

2014-10-13
	* added automatic detection of normal/steel character elements in level
	  editor when drawing text (depending on currently selected element)

2014-10-13
	* eliminated historical ISO-8859-1 characters from source code files
	  (but still using them internally for special character encodings)
	* changed output of special character for level sketch brushes to UTF-8

2014-10-08
	* added handling of unselectable selectbox options and option headlines

2014-10-07
	* fixed bug when changing between graphic sets with different tile size
	* cleanup of handling the various graphic sizes for different purposes
	  (like 32x32, 16x16 etc.); this change was needed for the bugfix above

2014-10-02
	* added virtual keyboard on Android port when entering player name

2014-10-01
	* fixed "quick menu doors" and sounds for door and envelope requests

2014-09-29
	* fixed display bugs with certain custom menu definitions regarding the
	  hall of fame (high scores) and setup screens that require scrolling
	  (these display bugs showed up with custom menu graphics of R'n'D jue)

2014-09-28
	* fixed bug with animation frames per line with non-standard tile size
	  (relevant for example for 64x64 sized frames continued on next row)

2014-09-22
	* removed checking of file identifier tokens for configuration files

2014-09-19
	* fixed bug where player actions were only mapped in team mode
	  (this broke four tapes in automatic game engine unit test where
	  old levels contained a non-yellow player, like rnd_abby_king, 011)

2014-09-15
	* removed large parts of the preprocessor hell of old and unused code

2014-09-14
	* updated source file headers (mainly author contact information)

2014-09-11
	* added key shortcuts for window scaling and toggling fullscreen mode:
	  - Ctrl-'+', Ctrl-'-' and Ctrl-'0' for up/downscaling and normal size
	  - "F11" key for toggling fullscreen mode (in addition to Alt-Enter)

2014-09-10
	* fixed some drawing bugs when scaling graphics due to "game.tile_size"
	* added some performance improvements when handling SDL surface scaling

2014-09-04
	* added custom graphics property "game.tile_size" to define in-game tile
	  size (this defines the tile size actually displayed on the playfield);
	  tile graphics will either be scaled to the defined game tile size or
	  have to be specified with the same image size (using ".tile_size")

2014-09-01
	* added custom graphics property ".tile_size" to define tile image size
	  for game element graphics (like "custom_1.tile_size"); non-standard
	  sized images will then be scaled accordingly to standard tile size

2014-08-30
	* fixed music still being played in Android version when in background

2014-08-30
	* added Android "menu" button to be treated as "yes" requester button
	  (while the Android "back" button was already treated as "no" button)

2014-08-28
	* added command line options "--version" / "-V" to show program version
	  (also shows SDL library versions when prefixed with "--debug" option)

2014-08-27
	* error file set to unbuffered to prevent truncation in case of crashes

2014-08-19
	* fixed bug causing wrong screen updates while playing (whole screen
	  update from backbuffer instead of playfield buffer if REDRAW_ALL set)
	* fixed nasty (typo) bug in native EM engine causing broken player
	  graphics when using different (redefined) playfield size

2014-08-18
	* fixed bug causing EM/EMC graphics sets containing original 16x16 tiles
	  to be displayed incorrectly (with broken scaling) when switching
	  between small and normal game graphics (thanks a lot to filbo for
	  analyzing and describing how to exactly reproduce this bug)

2014-05-15
	* removed MS-DOS support
	* removed native X11 support (X11 now only supported via SDL/SDL2)

2014-05-14
	* cleanup of functions RedrawPlayfield() and BlitScreenToBitmap()

2014-05-13
	* fixed level redraw after quick-loading tape with small tile graphics

2014-03-03
	* added compatibility code for existing request door animation settings

2014-03-01
	* added ultra-generic, ultra-flexible request door animation handling

2014-02-18
	* fixed major bugs in handling single-player and multi-player tapes
	  (for details, see http://www.artsoft.org/forum/viewtopic.php?t=2086)

2014-02-13
	* fixed various problems with playfield and requester/tape/editor doors
	  defined to be at non-standard screen positions in artwork config file

2014-01-28
	* added envelope style requester dialog (alternative to door requester)

2014-01-27
	* fixed problems with window scaling and updating related setup value
	* added setup option to select anti-aliasing quality of scaled windows

2014-01-17
	* improved speed of displaying progress when loading levels and artwork
	* changed fullscreen and window scaling changes in setup menu to have
	  immediate effect (instead of being effective after leaving setup menu)

2014-01-15
	* fixed toons stopping on continuous touch events on Mac OS X

2014-01-14
	* fixed bug when displaying game envelope with even sized playfield
	* added graphic configuration options for request (dialog) buttons

2014-01-13
	* fixed some redraw bugs with window scaling under Mac OS X

2014-01-10
	* fixed problems with window scaling and updating related setup value

2014-01-07
	* fixed problems related to fullscreen switching and window scaling

2014-01-06
	* fixed inconsistent custom artwork constants numbering in src/main.h,
	  src/screen.c and src/conf_gfx.c (this really should be cleaned up)
	  (this bug caused custom artwork definition to set wrong variable)

2014-01-05
	* fixed using fullscreen mode on Android instead of pseudo-window mode
	* fixed keeping desktop fullscreen mode when changing viewport size

2014-01-04
	* fixed remaining text input problems for non-ASCII keys with modifier
	* added window scaling options to graphics setup menu

2014-01-03
	* fixed key code problems with certain keys for SDL2
	  (keypad keys not being in numerical order; number of function keys)
	* fixed text input problems for text characters using modifier keys

2014-01-02
	* fixed fullscreen option for SDL2 (using only desktop fullscreen now)

2013-12-28
	* fixed graphical bugs when using renderer/texture based graphics

2013-12-23
	* fixed playing certain sounds (menu navigation sound and counting
	  score sound after solving a level) when "normal sounds" are disabled

2013-12-16
	* continued porting Rocks'n'Diamonds to Android (levels now playable)

2013-12-12
	* added SDL2 renderer/texture based graphics frame handling to allow for
	  "desktop" style fullscreen mode and scaling of game screen/window

2013-12-11
	* removed limitation of artwork files to selected file types (this means
	  that every file type supported by SDL_image and SDL_mixer can be used)
	* changed default graphics from PCX to PNG (needed for Android version
	  to prevent painfully slow image loading, although not compressing PCX
	  files in the assets directory of the APK package might also work fine)
	* fixed bug with SDL_BlitSurface creating garbage when source and target
	  surface are the same (this bug also existed in versions of SDL 1.2.x)

2013-12-07
	* started porting Rocks'n'Diamonds to Android (already shows main menu)

2013-12-03
	* ported Rocks'n'Diamonds to SDL2 (first simple version that works)

2013-12-01
	* version number set to 3.3.1.3

2013-11-24
	* version 3.3.1.2 released

2013-11-20
	* improved error handling: display error message on screen (not only in
	  the error file or on the console), and display path of the error file

2013-11-13
	* fixed problem with R'n'D restarting with same level set that may have
	  caused a problem (and therefore failing again and again); after an
	  error, the last level set is now deactivated in file "levelsetup.conf"
	  to restart with default level set (which should work without error)

2013-11-07
	* fixed determining main game data directory on Mac OS X "Mavericks"

2013-11-04
	* version number set to 3.3.1.2

2013-11-04
	* version 3.3.1.1 released

2013-11-03
	* added scripts directory to distribution package to enable building
	  element definitions after editing artwork config source code files

2013-10-26
	* added volume controls for sounds, loops and music to sound setup

2013-10-24
	* version number set to 3.3.1.1

2013-10-23
	* version 3.3.1.0 released

2013-10-21
	* version number set to 3.3.1.0

2012-10-13
	* fixed display of level time switching from ascending to descending
	  when making use of the "time orb bug" (see element setting in editor)
	  (see level 053 of set "rnd_equinox_tetrachloride_ii" for an example)
	* fixed graphics performance problems (especially on Mac OS X) by using
	  whole-playfield redraw on SDL target, while still using the previous
	  single-tile redraw method on X11 target (using redraw tiles threshold)

2011-10-07
	* fixed code (esp. random/tape handling) when compiled on 64-bit systems
	  (by replacing all "long" types by "int" types)

2010-11-19
	* fixed nasty bug (affecting crumbled graphics) after adding new special
	  graphics suffix ".TAPE" (and messing some things up in src/main.c)

2010-08-04
	* fixed wrong argument order in DrawTextBuffer() in gadgets.c
	  (this caused fonts in envelope config in level editor being invisible)

2010-07-19
	* fixed some problems with half tile size and even tile sized playfields

2010-07-12
	* added level selection screen (when clicking on main menu level number)
	* added level tracing (played, solved) for use in level selection screen
	  (to display already played or solved levels in different font color)

2010-06-24
	* added alternative game mode for playing with half size playfield tiles
	* fixed another memory violation bug in the native Supaplex game engine
	  (this potential memory bug was also in the original Megaplex code, but
	  apparently only occured under rare conditions triggered by using the
	  additional added preceding playfield memory area to make a few strange
	  levels using dirty off-playfield tricks (bugs) like "12s033.sp" also
	  solvable (this all worked fine in the classic DOS version, of course))

2010-06-23
	* added graphics performance optimization to native Supaplex game engine
	* fixed bug with accidentally removing preceding buffer in SP engine
	* moved some editor graphics from "RocksDoor.pcx" to "RocksMore.pcx"
	  (to prevent compatibility mapping of these newer graphics to older
	  (custom) versions of "RocksDoor.pcx" which did not contain them yet)

2010-06-18
	* added separately configurable game panel background to graphics config
	* fixed displaying Supaplex time (now based on 35 fps instead of 50 fps)

2010-06-16
	* added tape panel graphics and screen positions to graphics config

2010-06-15
	* added compatibility stuff for redefined "global.door" (which affects
	  all parts of that image that have their own graphics definition now)

2010-06-14
	* added sound button graphics to graphics config

2010-06-13
	* added tape button graphics and screen positions to graphics config

2010-06-09
	* improved single step mode in R'n'D, EM and SP engines

2010-06-08
	* version number set to 3.3.0.2

2010-06-08
	* version 3.3.0.1 released

2010-06-08
	* added configurable key shortcuts for snap+direction player actions
	  (probably most useful for recording tool-assisted speedrun (TAS)
	  tapes using the single-step mode of the tape recorder)

2010-05-28
	* version number set to 3.3.0.1

2010-05-25
	* version 3.3.0.0 released

2010-05-22
	* fixed missing memory allocation in SP engine when saving engine data
	  for non-SP game engine snapshots (which also stores SP engine part)

2010-05-21
	* fixed problem with scrolling in native EM engine in multi-user mode
	  (this bug was just introduced with the experimental viewport stuff)
	* fixed animation of splashing acid in EM engine with classic artwork
	* fixed animation of cracking nut in EM engine with classic artwork
	* fixed (implemented) single step mode in native EM and SP engines
	* fixed "latest_engine" flag in classic levels (moved to single sets)
	* updated SDL library DLLs for Windows to the latest release versions
	  (this fixed some mysterious crashes of the game on Windows systems)
	* replaced EM and SP set in classic level set with native level files
	* finally added a newly written "CREDITS" file to the game package
	* removed sampled music loops from classic music set

2010-04-20
	* changed native Emerald Mine engine to support different viewport sizes

2010-04-19
	* changed native Supaplex engine to support different viewport sizes

2010-04-07
	* added initial, experimental support for different viewport properties
	  (with "viewports" being menu/playfield area and doors; currently the
	  size of the menu/playfield area and door positions can be redefined)

2010-04-02
	* added initial, experimental support for different window sizes

2010-03-27
	* added support for native Sokoban solution files in pure 'udlrUDLR'
	  format with extension ".sln" instead of ".tape" for solution tapes

2010-03-26
	* added image config suffix ".class" to be able to define classes of
	  crumbled elements which are then separated against each others when
	  drawing crumbled borders (class names can freely be defined)
	  (Example: "sand.CRUMBLED.class: sand" and "emc_grass.CRUMBLED.class:
	  emc_grass" results in sand and emc_grass being crumbled separately,
	  even if directly adjacent on the playfield.)
	* added image config suffix ".style" to use two new features for
	  crumbled graphics:
	  - "accurate_borders": try to draw correctly crumbled corners (which
	    means that a row of crumbled elements does not have two crumbled
	    corners for each element in the row, but only at the "real" corners
	    at the start and the end of the row of elements)
	  - "inner_corners": also draw inner corners in concave constructions
	    of several crumbled elements -- this is currently a big kludge: the
	    number of frames for crumbled graphic must be "2", with the first
	    frame as usual (crumbled graphic), while the second frame contains
	    the graphic with inner (crumbled) corners for the crumbled graphic
	  (These two features are mainly intended for bevelled walls, not for
	  diggable elements like sand; "inner_corners" only works reliably for
	  static walls, not for in-game dynamically changing walls using CEs.)

2010-03-16
	* finished code cleanup of native Supaplex game engine

2010-03-14
	* started code cleanup of native Supaplex game engine

2010-03-13
	* integrated playing sound effects into native Supaplex game engine

2010-03-10
	* added configurable key shortcuts for the tape recorder buttons

2010-03-09
	* added (hidden) function to save native Supaplex levels with tape as
	  native *.sp file containing level with demo (saved with a file name
	  similar to native R'n'D levels, but with ".sp" extension instead of
	  ".level"); to use this functionality, enter ":save-native-level" or
	  ":snl" from the main menu with the native Supaplex level loaded and
	  the appropriate tape loaded to the tape recorder
	* fixed potential crash bug caused by illegal array access in engine
	  snapshot loading and saving code
	* changed setting permissions of score files to be world-writable if
	  the program is not installed and running setgid to allow the program
	  to modify existing score files when run as a different user (which
	  allows cheating, of course, as the score files are not protected
	  against modification in this case)
	* added (commented out) suggestions for RO_GAME_DIR and RW_GAME_DIR to
	  the top level Makefile for Debian / Ubuntu installations
	* added saving read-only levels from editor into personal level set
	  (thanks to Bela Lubkin for the above four patches)

2010-03-03
	* added updating of game values on the panel to Supaplex game engine

2010-02-23
	* finished integrating R'n'D graphics engine into Supaplex game engine
	  (although some animations do not support full customizability yet)

2010-02-22
	* done integrating R'n'D graphics engine into file "Infotron.c"
	* done integrating R'n'D graphics engine into file "OrangeDisk.c"

2010-02-19
	* integrated engine snapshot functionality into Supaplex game engine

2010-02-16
	* fixed bug in native Supaplex engine that broke several demo solutions
	* fixed bug with re-initializing already existing elements in function
	  RelocatePlayer() in src/game.c (causing problems with Sokoban fields
	  counted a second time, making the currently playing level unsolvable)
	* done integrating R'n'D graphics engine into file "SnikSnaks.c"
	* done integrating R'n'D graphics engine into file "Electrons.c"
	* done integrating R'n'D graphics engine into file "Zonk.c"

2010-02-14
	* done integrating R'n'D graphics engine into file "Murphy.c"
	* done integrating R'n'D graphics engine into file "BugsTerminals.c"

2010-02-07
	* started integrating R'n'D graphics engine into Supaplex game engine

2010-02-02
	* added small kludge that allows transparent pushing animation over
	  non-black background (by using "game.use_masked_pushing: true")
	* added editor flag to Sokoban field/object elements to automatically
	  finish solved Sokoban style levels (even if they contain non-Sokoban
	  elements, which prevents auto-enabling this feature for such levels)

2010-01-10
	* added new element "from_level_template" which is replaced by element
	  from level template at same playfield position when loaded (currently
	  not accessible from level editor, but only used for special Sokoban
	  level conversion when using "special_flags: load_xsb_to_ces")
	* added special behaviour for "special_flags: load_xsb_to_ces": global
	  settings of individual level files are overwritten by template level
	  (except playfield size, level name, level author and template flag)

2010-01-07
	* added handling of gravity ports when converting Supaplex style R'n'D
	  levels to native Supaplex levels for playing with Supaplex engine

2010-01-06
	* fixed bug in Supaplex engine regarding initial screen scroll position

2009-12-17
	* fixed EMC style pushing animations in the R'n'D graphics engine (when
	  using ".2nd_movement_tile" for animations having start and end tile)
	* for this to work (look) properly for two-tile pushing animations with
	  non-black (i.e. opaque) background, the pushing graphics drawing order
	  was changed to first draw the pushed element, then the player (maybe
	  this should be controlled by an ".anim_mode" flag yet to be added)
	* two-tile animations for moving or pushing should have 7 frames for
	  normal speed, 15 frames for half speed etc. to display correct frames
	* two-tile animations are also displayed correctly with different speed
	  settings for the player (for pushing animations) or moving elements

2009-12-16
	* added searching for template level (file "template.level") not only
	  inside the level set directory, but also in above level directories;
	  this makes is possible to use the same single template level file
	  (placed in a level group directory) for many level sub-directories

2009-12-10
	* fixed bug with steel exit being destructible during opening phase
	* added token "special_flags" to "levelinfo.conf" (currently with the
	  only recognized value "load_xsb_to_ces", doing the same as the flag
	  "-Dload_xsb_to_ces" on the command line, but as a permanent flag for
	  converting all elements in native (XSB) Sokoban level files to CEs)

2009-12-08
	* fixed some problems with Supaplex engine when compiling for Windows

2009-12-05
	* added special mode to convert elements of Sokoban XSB levels to CEs
	  by adding "-Dload_xsb_to_ces" to the command line starting the game
	  (also adding a dependency to a template level file "template.level")

2009-12-01
	* added reading native Sokoban levels and level packages (XSB files)

2009-11-25
	* fixed bugs in (auto)scrolling behaviour when passing ports or when
	  wrapping around the playfield through "holes" in the playfield border

2009-11-24
	* changed internal playfield bitmap handling from playfield sized bitmap
	  to screen sized bitmap (visible scrolling area), therefore speeding up
	  graphics operations (by eliminating bitmap updates in invisible areas)
	  and removing playfield size limitations due to increasing bitmap size
	  for larger playfield sizes (while the new implementation always uses
	  a fixed playfield bitmap size for arbitrary internal playfield sizes)

2009-11-12
	* fixed bug with single step mode (there were some cases where the game
	  did not automatically return to pause mode, e.g. when trying to push
	  things that cannot be pushed or when trying to run against a wall)

2009-11-01
	* added support for loading Supaplex levels in MPX level file format

2009-10-31
	* fixed SP engine to set "game over" not before lead out counter done

2009-10-30
	* fixed (potential) compile error when using GCC option "-std=gnu99"
	  (thanks to Tom "spot" Callaway)

2009-10-28
	* fixed array allocation in native Supaplex engine to correctly handle
	  preceding scratch buffers (needed because of missing border checking)
	* fixed playfield initialization to correctly add raw header bytes as
	  subsequent scratch buffer (needed because of missing border checking)

2009-10-24
	* most important parts of native Supaplex engine integration working:
	  - native Supaplex levels can be played in native Supaplex engine
	  - native Supaplex level/demo files ("*.sp" files) can be re-played
	  - all 111 classic original Supaplex levels automatically solvable
	  - native Supaplex engine can be selected and used from level editor
	  - logic of re-playing Supaplex demos migrated to R'n'D tape logic

2009-09-25
	* fixed another translation problem from VisualBasic to C (where "int"
	  should be "short") causing unsolvable demos with bugs and terminals
	  ("bugs" being related to the Supaplex "buggy base" element here ;-) )

2009-09-23
	* fixed bug when reading Supaplex single level files (preventing loader
	  from seeking to level position like in Supaplex level package files)

2009-08-01
	* first classic Supaplex level running and solved by solution/demo tape

2009-06-20
	* started with integration of native Supaplex engine, using source code
	  of Megaplex from Frank Schindler, based on original Supaplex engine

2009-06-16
	* version number set to 3.2.6.2

2009-06-15
	* version 3.2.6.1 released

2009-05-31
	* fixed bug with element_info[e].gfx_element not being initialized in
	  early game stage, causing native graphics in EMC level sets to be
	  mapped completely to EL_EMPTY (causing a blank screen when playing)
	  (this only happened when starting the program with an EMC set with
	  native graphics, but not when switching to such a set at runtime)

2009-03-30
	* deactivated blit-to-same-surface workaround again (see 2009-03-24)
	  and using self-compiled, patched SDL.dll that solves this problem
	  (interim solution until release of SDL 1.2.14 that should fix this)

2009-03-26
	* extended backwards compatibility mode to allow already fixed bug with
	  change actions (see "2008-02-05") for existing levels (especially the
	  Zelda and Zelda II levels and other cool stuff by Alan Bond like FMV)

2009-03-24
	* reactivated workaround to prevent program crashes due to blitting to
	  the same SDL surface that apparently only occurs on Windows systems
	  (this is no final solution; this problem needs further investigation)

2008-11-05
	* version number set to 3.2.6.1

2008-11-04
	* version 3.2.6.0 released

2008-10-11
	* fixed behaviour of player option "no centering when relocating" which
	  was incorrect when disabled and relocation target inside visible area
	  and "no scrolling when relocating" enabled at the same time

2008-10-06
	* fixed problems with re-mapping players on playfield to input devices:
	  previously, players found on the level playfield were changed to the
	  players connected to input devices (for example, player 3 in the level
	  was changed to player 1 (using artwork of player 3, to be able to use
	  a player with a different color)); this had the disadvantage that CE
	  conditions using player elements did not work (because the players in
	  the level definition are different to those effectively used in-game);
	  the new system uses the same player elements as defined in the level
	  playfield and re-maps the input devices of connected players to the
	  corresponding player elements when playing the level (in the above
	  example, player 3 now really exists in the game and is moved using the
	  events from input device 1); level tapes still store the events from
	  input devices 1 to 4, which are then re-mapped to players accordingly
	  when re-playing the tape (just as it is done when playing the level)

2008-09-29
	* fixed bug with player relocation while the player switches an element

2008-09-24
	* fixed bug with EM/DC style exit and EM/DC style steel exit which was
	  not walkable (and did not let the player enter) when in process of
	  opening, but not fully open yet (which can cause the player not being
	  able to enter the exit in EM/DC style levels in time)

2008-08-02
	* fixed some bugs regarding the new level/CE random seed reset options

2008-07-14
	* moved "level settings" and "editor settings" to two tabbed screens in
	  level editor to gain space for additional level property settings
	* added level setting to start a level with always the same random seed
	* added CE action "set random seed" to re-initialize random seed in game
	  (this is the only CE action that gets executed before the CE changes,
	  which is needed to use the newly set random seed during the CE change)

2008-06-16
	* fixed redraw problem of special editor door when playing from editor

2008-06-16
	* fixed initialization of gfx_element for level sketch image creation

2008-06-15
	* added switch for EM style dynamite "[ ] explodes with chain reaction"
	  (with default set to "on" for existing levels, but "off" for all new
	  levels), as EM style dynamite does not chain-explode in original EM

2008-02-05
	* added optional initial inventory for players (pre-collected elements)
	* added change page actions "set player inventory" and "set CE artwork"
	* added recognition of "player" parameter on change pages when player
	  actions are defined, but no trigger player in corresponding condition
	  (this resulted in actions that only affected the first player before)
	* fixed bug with change actions being executed for newly created custom
	  elements resulting from custom element changes, when the intention was
	  only to check for change actions for the previous custom element

2008-02-03
	* changed design and size of element drawing area in level editor
	* added "element used as action parameter" to element change actions

2008-01-27
	* added possibility to reanimate player immediately after his death
	  (for example, by "change to <player> when explosion of <player>")

2008-01-25
	* fixed bug with "gray" white door not being uncovered by magnifier
	* added score for collecting (any) key to the white key config page

2008-01-22
	* added condition "deadly when <getting hit by>" for custom elements
	  that behaves a bit like the existing "deadly when <colliding with>",
	  but with the following differences:
	  - it only kills players or friends when it was moving before it hits
	  - it does not kill players or friends that try to run into it

2008-01-21
	* fixed the following change conditions where a player element is used
	  as the "element that is triggering the custom element change":
	  - touching <element>
	  - hitting <element>
	  - explosion of <element>
	  - move of <element>
	  (the last two conditions already worked partially, but only for the
	  first player, and not for the "Murphy" player when using "move of")

2008-01-20
	* fixed crash bug caused by accessing invalid element (with value -1)
	  in UpdateGameControlValues()
	* fixed graphical bug when using two-tile movement animations with EMC
	  game engine without explicitly using native EMC graphics engine

2007-10-31
	* fixed bug in new "can dig" feature (see below) so that an unsuccessful
	  try to push something (due to push delay) does not cause a dig action

2007-10-29
	* fixed bug with reference elements used as trigger elements on custom
	  element change pages not being recognized
	* fixed bug with reference elements not being removed from the playfield
	* added engine functionality that allows custom elements that "can dig"
	  other elements not only to do so when moving by themselves, but also
	  when being pushed by the player (therefore adding the functionality to
	  push one element over another element, replacing it with the new one)

2007-10-23
	* added command line function to write level sketch images to directory

2007-10-20
	* merged override and auto-override options into new override options
	  with a new data type than can take the values "no", "yes" and "auto"

2007-10-18
	* fixed growing steel wall to also leave behind steel wall instead of
	  normal, destructible wall
	* fixed handling of rocks falling through stacks of quicksand with
	  different speed (before, the rocks just got stuck in the quicksand)

2007-10-09
	* fixed nasty bug with auto-override and normal override not working on
	  program startup (especially when current level set has custom artwork)

2007-10-05
	* version 3.2.5 released as special edition "R'n'D jue"

2007-10-05
	* fixed X11 crash bug when blitting masked title screens over background

2007-10-04
	* changed build system to support special editions (like "R'n'D jue")
	* added (hardcoded) loading graphics for "R'n'D jue" special edition
	* fixed X11 crash bug when scaling images with width/height less than 32

2007-09-27
	* added "background.PLAYING" (only visible as two-pixel border in game)
	* added default level set for first start of special R'n'D version
	* changed door animations for editor always behaving like "quick doors"

2007-09-26
	* added new custom artwork setup option "auto-override non-CE sets" for
	  automatic artwork override that is only used for level sets without
	  custom element artwork (as it does not make much sense to override
	  any artwork that redefines custom element artwork for sets using CEs)
	* fixed default artwork for "special" R'n'D versions always using the
	  "classic" artwork as the base if base artwork is not explicitly
	  defined in "levelinfo.conf", regardless of different default artwork
	  used by the special R'n'D version -- this is needed because any such
	  custom artwork is designed using the "classic" artwork definitions as
	  the base (including menu definitions and screen positions etc., which
	  would otherwise be taken from the different special default artwork)

2007-09-17
	* fixed drawing of animated "quicksand.filling" and "quicksand.emptying"
	  for both EMC and R'n'D graphics engine (heavy workarounds needed due
	  to massively broken handling of quicksand in R'n'D game engine)
	* fixed off-limits access to array in DrawLevelFieldCrumbledSandExt()
	* fixed crash bug (hopefully) when scrolling with cursor keys in editor

2007-09-16
	* fixed small bug in toon drawing (introduced when fixing the crash bug)

2007-09-15
	* added graphics definition "game.panel.highscore" to display the
	  current levels current high score in the game panel

2007-09-13
	* version number set to 3.2.5

2007-09-13
	* version 3.2.4 released

2007-09-13
	* fixed crash bug in toon drawing functions for large step offset values

2007-09-12
	* fixed some problems with displaying game panel when quick-loading tape

2007-09-07
	* fixed (experimental only) redrawing of every tile per frame (even if
	  unneeded) for the extended (R'n'D based) EMC graphics engine
	* added optimization to only calculate element count for panel display
	  if really needed (that is, if element count values defined on panel)
	* fixed problem with special editor door redraw when entering main menu

2007-09-03
	* fixed bug with displaying background for title messages on info screen
	* some code cleanup for the extended (R'n'D based) EMC graphics engine

2007-09-01
	* fixed bug with CE action "move player" always resulting in player 4
	  if there was a CE action with no trigger player (because the player
	  element was calculated by using log_2() from trigger player bits with
	  the value PLAYER_BITS_ANY) -- this is now fixed by also storing the
	  triggering player bit mask and handling all players in "move player"
	* fixed bug when defined artwork cannot be found for artwork that has
	  default artwork cloned from other artwork (without default filename)
	* added several fixes to the extended (R'n'D based) EMC graphics engine

2007-08-26
	* fixed broken editor copy and paste for custom elements between levels

2007-08-25
	* title messages are now also searched in graphics artwork directory;
	  those found in graphics directory have precendence over those found
	  in level directory -- this handles title messages stored in graphics
	  directories as part of the artwork set, just like title images; this
	  makes sense, as corresponding special font definitions for messages
	  are usually defined in the same graphics artwork directory, and also
	  because title images and title messages that are combined in a level
	  set introduction should usually not be separated when the level set
	  is used with a different artwork set (e.g. using "override graphics")
	* fixed problem with door borders on main screen by first drawing doors
	  and then the corresponding border masks, but not vice versa
	* fixed problem with artwork config entries using the value "[DEFAULT]";
	  this does not what one might expect, but sets the value to an invalid
	  value -- solution: simply ignore such entries, which results in this
	  value keeping its previous (real) default value (in general, entries
	  that should use their default value should just not be defined here)
	* fixed problem with wrong fading area size from main menu to setup menu

2007-08-22
	* fixed problem with broken crumbled graphics after level set changes
	  when using R'n'D custom artwork with level sets using the EMC engine

2007-05-07
	* fixed invisible "joysticks deactivated ..." text on setup input screen

2007-04-27
	* added use of hashes created from static lists (element tokens, image
	  config, font tokens) to speed up lookup of configuration parameters
	* fixed bug where element and graphic config token lookup was mixed up

2007-04-26
	* added "busy" animation when initializing program and loading artwork
	* added initialization profiling for program startup (debugging only)

2007-04-25
	* fixed(?) very strange bug apparently triggered by memset() when code
	  was cross-compiled with MinGW cross-compiler for Windows XP platform
	  (this only happened when using SDL.dll also self-compiled with MinGW)

2007-04-19
	* added graphics engine directive "border.draw_masked_when_fading" that
	  enables/disables drawing of border mask over screen that is just faded

2007-04-18
	* fixed small problem with separate fading definition for game screen

2007-04-14
	* added additional configuration directives for setup screen draw offset
	  menu.draw_xoffset.SETUP[XXX] and menu.draw_yoffset.SETUP[XXX] with XXX
	  in GAME, EDITOR, GRAPHICS, SOUND, ARTWORK, INPUT, SHORTCUTS_1,
	  SHORTCUTS_2, CHOOSE_ARTWORK, CHOOSE_OTHER (where "CHOOSE_ARTWORK" is
	  used to define draw offset on custom artwork selection screens and
	  "CHOOSE_OTHER" is used on all other list style selection screens, like
	  choosing game speed or screen mode for fullscreen mode)
	* added additional configuration directives to define main menu buttons:
	  - menu.button_name	and menu.button_name.active
	  - menu.button_levels	and menu.button_levels.active
	  - menu.button_scores	and menu.button_scores.active
	  - menu.button_editor	and menu.button_editor.active
	  - menu.button_info	and menu.button_info.active
	  - menu.button_game	and menu.button_game.active
	  - menu.button_setup	and menu.button_setup.active
	  - menu.button_quit	and menu.button_quit.active
	* added eight pure decoration graphic definitions for the game panel

2007-04-08
	* added support for accessing native Diamond Caves II level packages
	* fixed displaying of game panel values for Emerald Mine game engine
	* fixed displaying end-of-level time and score values on new game panel

2007-04-07
	* added game panel control to display arbitrary elements on game panel
	* added game panel control to display custom element score (globally
	  unique for identical custom elements) either as value or as element
	* added ".draw_masked" and ".draw_order" to game panel control drawing

2007-04-05
	* fixed some general bugs with handling of ".active" elements and fonts

2007-04-04
	* cleanup of game panel elements (some elements were not really needed)
	* added displaying of gravity state (on/off) as new game panel control
	* added animation for game panel elements (similar to game elements)

2007-04-03
	* added new pseudo game mode "PANEL" to define panel fonts and graphics
	  - panel fonts now use ".PANEL" suffix instead of ".PLAYING" suffix
	  - panel graphics now use ".PANEL" suffix instead of ".DOOR" suffix
	  (else graphics would have to use ".PLAYING", which would be confusing)
	* fixed bug when fading out to game screen with border mask defined

2007-04-02
	* added attribute ".tile_size" for element style game panel controls

2007-04-01
	* added <space> key as additional valid key to use for confirm requester

2007-03-31
	* improved menu fading, adding separate fading definitions for entering
	  and leaving a "content" screen (in general), and optional definitions
	  for the special "content" screens SCORES, EDITOR, INFO and PLAYING

2007-03-30
	* added (currently invisible) setup option to define scroll delay value
	* fixed small bug in priority handling when auto-detecting level start
	  position in levels without player element (but player from CE etc.)
	* added option "game.forced_scroll_delay_value" to override user choice
	  of scroll delay value for certain level sets with "graphicsinfo.conf"
	* replaced setup option "scroll delay: on/off" by new setup option that
	  directly allows selecting the desired scroll delay value from 0 to 8

2007-03-28
	* added displaying of most game panel control elements (not animated)

2007-03-26
	* added new configuration directives to display additional game engine
	  values on the game control panel, like the following examples:
	  - game.panel.time_hh/time_mm/time_ss	- level time in HH/MM/SS format
	  - game.panel.penguins			- number of penguins to rescue
	  - game.panel.level_name		- level name of current level

2007-03-24
	* added support for preview tile sizes "1" and "2" (1x1 and 2x2 pixels)

2007-03-23
	* added new player option "no centering when relocating" for "invisible"
	  teleportations to level areas that look exactly the same, giving the
	  illusion that the player did not relocate at all (this was the default
	  since 3.2.3, but caused visual problems with room creation in "Zelda")
	* added new menu fading effect "melt", shamelessly stolen from "DOOM"

2007-03-21
	* improved menu fading, adding separate fading definitions for entering
	  and leaving a menu and for fading between menu and "content" screens
	* fixed small bug with recognizing also ".font_xyz" style definitions

2007-03-20
	* improved menu fading, adding separate fading definitions for fading
	  between menu screens and fading between menu and "destination" screens

2007-03-19
	* titlemessage_initial_x and titlemessage_x set to "[DEFAULT]" in static
	  configuration (set from "[titlemessage_initial]" and "[titlemessage]")
	* fading settings of "[titlemessage_initial]" and "[titlemessage]" set
	  to "[DEFAULT]" in static configuration (set from "[title_initial]" and
	  "[title]")
	* improved title fading, allowing fading animation types "none", "fade"
	  and "crossfade" (including cross-fading of last title to main menu)

2007-03-18
	* added configurability of graphics, sounds and music for title screens,
	  which are separated into initial title screens (only shown once at
	  program startup) and title screens shown for a given level set; these
	  title screens can be composed of up to five title images and up to
	  five title text messages (each drawn using an optional background
	  image), also using background music and/or sounds; aspects like
	  background images, sounds and music of title screens can either be
	  defined generally (valid for all title screens) or specifically (and
	  therefore differently for each title screen) using these directives:

	  to define a background image, sound or music file for all screens:
	  - background.TITLE_INITIAL (for all title screens for game startup)
	  - background.TITLE         (for all title screens for level sets)

	  to define a background image, sound or music file for a single screen:
	  - background.titlescreen_initial_x  (with x in 1,2,3,4,5)
	  - background.titlescreen_x          (with x in 1,2,3,4,5)
	  - background.titlemessage_initial_x (with x in 1,2,3,4,5)
	  - background.titlemessage_x         (with x in 1,2,3,4,5)

	  to define the title screen images:
	  - titlescreen_initial_x             (with x in 1,2,3,4,5)
	  - titlescreen_x                     (with x in 1,2,3,4,5)

	  to define the title text messages, place text files into the level set
	  directory that have the following file names:
	  - titlemessage_initial_x.txt        (with x in 1,2,3,4,5)
	  - titlemessage_x.txt                (with x in 1,2,3,4,5)

	  to define the properties of the text messages, either use directives
	  that affect all text messages:
	  - [titlemessage_initial].<suffix>
	  - [titlemessage].<suffix>
	  or use directives that affect single text messages:
	  - titlemessage_initial_x.<suffix>   (with x in 1,2,3,4,5)
	  - titlemessage_x.<suffix>           (with x in 1,2,3,4,5)

	  valid values for <suffix> are the same as for readme.<suffix> below;
	  use ".sort_priority" (default: 0) to define an arbitrary order for
	  title images and title messages (which can therefore be mixed)

2007-03-14
	* added full configurability of "readme.txt" screen appearance:
	  - readme.x:              <left position used with alignment>
	  - readme.y:              <top position>
	  - readme.width:          <maximim text width in pixels>
	  - readme.height:         <maximum text height in pixels>
	  - readme.chars:          <maximum number of chars per line>
	  - readme.lines:          <maximum number of lines displayed>
	  - readme.align:          left,center,right (default: center)
	  - readme.top:            top,middle,bottom (default: top)
	  - readme.font:           font name
	  - readme.autowrap:       true,false (default: true)
	  - readme.centered:       true,false (default: false)
	  - readme.parse_comments: true,false (default: true)
	  - readme.sort_priority:  (not used here, but only for title screens)
	  when "readme.chars" and/or "readme.lines" is set to "-1" (this is the
	  default), they are automatically determined from "readme.width" and
	  "readme.height" accordingly; when they are not "-1", they have
	  precedence over "readme.width" and "readme.height"
	* added internal ad-hoc config settings for displaying text files like
	  title messages or "readme.txt" style level set info files:
	  - .font:           font name  (default: readme.font)
	  - .autowrap:       true,false (default: readme.autowrap)
	  - .centered:       true,false (default: readme.centered)
	  - .parse_comments: true,false (default: readme.parse_comments)
	  (the leading '.' and the separating ':' are mandatory here); to use
	  these ad-hoc settings, they have to be written inside a comment, like
	  "# .autowrap: false" or "# .centered: true"; these settings then
	  override the above global settings (they can even be used more than
	  once, like "# .centered: true", then some text that should be drawn
	  centered, then "# .centered: false" to go back to non-centered text;
	  important note: after using "# .parse_comments: false", or when using
	  "readme.parse_comments: false", detecting and parsing comments inside
	  the file is disabled and comments are just printed like normal text;
	  also be aware that all automatic text size calculations are done with
	  the font defined in "readme.font", while using different fonts using
	  "# .font: <font>" inside the text file may cause unexpected results

2007-03-08
	* changed some numerical limits in the level editor from 255 to 999

2007-03-07
	* added option "system.sdl_videodriver" to select SDL video driver
	* added output of SDL video and audio driver to "version info" page

2007-03-06
	* added group element drawing to IntelliDraw drawing functions
	* fixed animation resetting problem again (last try broke Snake Bite)
	* fixed diagonal scrolling in screen scrolling (last try broke Pac Man)

2007-03-01
	* added new (special) "include: <filename>" directive that works in all
	  configuration files (like "graphicsinfo.conf") and that has the same
	  effect as if that directive would be replaced with the content of the
	  specified file (this can be useful to split large configuration files
	  into several smaller ones and include them from one main file, or to
	  store configuration settings that always stay the same into a separate
	  file, while including it and only add those parts that really change)

2007-02-24
	* fixed minor bug (screen redraw of player tiles) in EMC graphics engine

2007-02-23
	* fixed bug in "InitMovingField()" where treating an integer array as
	  boolean caused wrong resetting of animations while elements are moving
	* fixed problem with resetting animations when starting element change

2007-02-08
	* added sort priority for order of title screens and title messages

2007-02-07
	* changed end of game again: do not wait for the user to press a key
	  anymore, but directly ask/confirm tape saving and go to hall of fame
	* re-enabled quitting of lost game by pressing space or return again
	* added blanking of mouse pointer when displaying title screens
	* added remaining menu draw offset definitions for info sub-screens

2007-02-05
	* added setup option to select game speed (from very slow to very fast)
	* improved handling of title text messages (initial and for level set)

2007-02-03
	* added new options "auto-wrap" and "centered" for DC2 style envelopes

2007-01-31
	* fixed displaying and typing of player name when it is centered
	* added special characters to be allowed for player name (not only A-Z)

2007-01-25
	* fixed blit in ScrollLevel() to same bitmap to not overlap anymore
	  (newer versions of the SDL library seem to not like this anymore)

2007-01-23
	* added code for configuration directives for control of game panel

2007-01-21
	* fixed small cosmetical bug with underlining property tabs in editor

2007-01-20
	* fixed small drawing bug in X11FadeRectangle
	* added new elements for newly supported Diamond Caves II levels:
	  - EM/DC style exits that disappear after passing
	  - white key and gate (one white key needed for each white gate)
	  - fake gate (there is no key to open/pass this kind of gate!)
	  - extended magic wall which also handles pearls and crystals
	  - fast quicksand

2007-01-14
	* changed maximum value for endless loop detection to a higher value
	  (some levels really used very deep recursion without being endless)

2007-01-13
	* added new elements for newly supported Diamond Caves II levels:
	  - growing steel walls
	  - snappable land mine

2007-01-08
	* added new elements for newly supported Diamond Caves II levels:
	  - steel text elements

2007-01-06
	* added level file loader for native Diamond Caves II levels

2007-01-05
	* version number set to 3.2.4

2007-01-05
	* version 3.2.3 released

2007-01-04
	* fixed malloc/free bug when updating EMC artwork entries in level list
	* added workaround (warning and request to quit the current game) when
	  changing elements cause endless recursion loop (which would otherwise
	  freeze the game, causing a crash-like program exit on some systems)

2006-12-16
	* fixed nasty string overflow bug when entering too long envelope text

2006-12-05
	* added feedback sounds for menu navigation "menu.item.activating" and
	  "menu.item.selecting" (for highlighting and executing menu entries)

2006-12-03
	* improved "no scrolling when relocating" to also consider scroll delay
	  (meaning that the player is not automatically centered in this case;
	  this makes it possible to "invisibly" relocate the player to a region
	  of the level playfield which looks the same as the old level region)
	* fixed bug with not recognizing "main.input.name.align" when active

2006-12-02
	* fixed bug with displaying masked borders over title screens when
	  screen fading is disabled

2006-11-25
	* fixed infinite loop / crash bug when killing the player while having
	  a CE with the setting "kill player X when explosion of <player X>"
	* added special editor graphic for "char_space" to distinguish it from
	  "empty_space" when editing a level (in-game graphics still the same)

2006-11-21
	* fixed nasty bug with initialization only done for the first player

2006-11-19
	* small change to handle loading empty element/content list micro chunks

2006-11-03
	* uploaded pre-release (test) version 3.2.3-0 binary and source code

2006-11-01
	* some optimizations on startup speed by reducing initial text output

2006-10-30
	* added caching of custom artwork information for faster startup times

2006-10-29
	* fixed graphical bug when using fewer menu entries on level selection
	  screen than usual (with "menu.list_size.LEVELS" directive)
	* fixed crash bug (Windows/SDL only) caused by BlitBitmap blitting from
	  the backbuffer to the backbuffer by error (with identical rectangle)

2006-10-28
	* fixed bug when displaying titlescreen with size less than element tile
	* fixed bug that caused elements with "change when digging <e>" event
	  to change for _every_ digged element, not only those specified in <e>
	* fixed bug that caused impact style collision when dropping element one
	  tile over the player that can both fall down and smash players
	* fixed bug that caused impact style collision when element changed to
	  falling/smashing element over the player immediately after movement

2006-10-24
	* fixed bug that allowed making engine snapshots from the level editor

2006-10-22
	* fixed bugs with player name and current level positions on main screen

2006-10-20
	* added configuration directives for control of title screens:
	  - "title.fade_delay" for fading time
	  - "title.post_delay" for pause between screens (when not crossfading)
	  - "title.auto_delay" to automatically continue after some time
	  these settings can each be overridden by specifying them with titles:
	  - "titlescreen_initial_{1-5}.{fade_delay,post_delay,auto_delay}"
	  - "titlescreen_{1-5}.{fade_delay,post_delay,auto_delay}"
	  fading mode can also be specified:
	  - "titlescreen_initial_{1-5}.anim_mode: {fade,crossfade}
	  - "titlescreen_{1-5}.anim_mode: {fade,crossfade}
	  default is using normal fading for menues and initial title screens,
	  while using cross-fading for level set title screens
	* fixed bug with background not drawn in Hall of Fame after game was won

2006-10-18
	* added configuration directives for the remaining main menu items

2006-10-17
	* added additional configuration directives for info screen draw offset:
	  menu.draw_{x,y}offset.INFO[{ELEMENTS,MUSIC,CREDITS,PROGRAM,LEVELSET}]
	* added additional configuration directives for preview info text
	* limited mouse wheel sensitive screen area to scrollable screen area

2006-10-16
	* added highlighted menu text entries to menu navigation when selected

2006-10-14
	* fixed bug that prevented player from correctly being created in the
	  top left corner by a custom element change in a level without player
	* fixed bug that prevented player from being killed when indestructible,
	  non-walkable element is placed on player position by extended change
	* added configurable menu button, text and input positions to main menu

2006-10-13
	* added page fading effects for remaining info sub-screens
	* fixed small bug that caused some delays when answering door request

2006-10-12
	* added directives "border.draw_masked.*" for menu/playfield area and
	  door areas to display overlapping/masked borders from "global.border"

2006-10-09
	* fixed bug with CE with move speed "not moving" not being animated
	* when changing player artwork by CE action, reset animation frame

2006-10-03
	* fixed bug with not unmapping main menu screen gadgets on other screens
	* fixed bug with un-pausing a paused game by releasing still pressed key
	* fixed bug with not redrawing screen when toggling to/from fullscreen
	  mode while fast reloading tape (without redrawing playfield contents)
	* fixed bug with quick-saving tape snapshot despite answering with "no"

2006-08-30
	* version number set to 3.2.3

2006-08-29
	* version 3.2.2 released

2006-08-29
	* fixed bug with redrawing screen in fullscreen mode after quick tape
	  reloading when using the EMC game engine
	* changed token names from "last_ce_[1-8]" to "prev_ce_[1-8]"

2006-08-28
	* fixed bug in GameWon() when level contains no exit (like in Sokoban)

2006-08-23
	* added engine snapshot functionality for instant tape reloading (this
	  only works for the last tape saved using "quick save", and does not
	  work across program restarts, because it completely works in memory)

2006-08-21
	* version number set to 3.2.2

2006-08-20
	* version 3.2.1 released

2006-08-20
	* fixed nasty bugs with handling error message file on Mac OS X systems

2006-08-19
	* general code cleanup (removing many annoying "#if 0" blocks etc.)

2006-08-18
	* fixed bug that caused broken tapes when manually appending to tapes
	  using the "pause before death" functionality, followed by recording
	* added setup option to disable fading of screens for faster testing

2006-08-16
	* code cleanup of new fading functions

2006-08-15
	* changed behaviour after solved game -- do not immediately stop engine
	* added some more smooth screen fadings (game start, hall of fame etc.)

2006-08-14
	* fixed bug with displaying pushed CE with value/score/delay anim_mode

2006-08-12
	* added configurable level preview position, tile size and dimensions
	* added configurable game panel value positions (gems, time, score etc.)

2006-08-10
	* fixed small bug with time displayed incorrectly when collecting CEs

2006-08-07
	* fixed bug with bumpy scrolling with EM engine in double player mode

2006-08-05
	* added compatibility code to fix "Snake Bite" style levels that were
	  broken due to a bugfix regarding EL_SOKOBAN_FIELD_PLAYER in 3.2.0

2006-08-04
	* fixed bug with scrollbars inside editor when using the Windows mouse
	  enhancement tool "True X-Mouse" (which injects key events to the event
	  queue to insert selected stuff into the Windows clipboard, which gets
	  confused with the "Insert" key for jumping to the last editor cascade
	  block in the element list)
	* added Rocks'n'Diamonds icon for use as window icon to SDL version
	* added key shortcut "Alt + Enter" to toggle fullscreen mode at any time

2006-08-01
	* added selection of preferred fullscreen mode to setup / graphics menu
	  (useful if default mode 800 x 600 does not match screen aspect ratio)

2006-07-30
	* improved down-scaling of images for better editor and preview graphics
	* changed user data directory for Mac OS X from Unix style to new place

2006-07-26
	* improved level number selection in main menu and player selection in
	  setup menu (input devices section) by using standard button gadgets
	* added support for mouse scroll wheel (caused buggy behaviour before)
	* added support for scrolling horizontal scrollbars with mouse wheel by
	  holding "Shift" key pressed while scrolling the wheel
	* added support for single step mouse wheel scrolling by holding "Alt"
	  key pressed while scrolling the wheel (can be combined with "Shift")
	* changed output file "stderr.txt" on Windows platform now always to be
	  created in the R'n'D sub-directory of the personal documents directory
	* added Windows message box to direct to "stderr.txt" after error aborts

2006-07-25
	* improved general scrollbar handling (when jump-scrolling scrollbars)

2006-07-23
	* changed scrollbars to always show last line as first after scrolling
	  (that means jumping n - 1 screen lines instead of n screen lines)

2006-07-22
	* fixed level versions of EMC level loader (from V4 to V1, V2 and V3)
	* fixed level time for EMC levels for V2 engine (V2 and V5 levels)
	* fixed special handling of vertically stacked acid becoming fake acid

2006-07-16
	* fixed bug (very special case) with CE_SCORE_GETS_ZERO, which can
	  affect multiple instances of the same CE, although this kind of
	  change condition usually only affects one single custom element

2006-07-16
	* version number set to 3.2.1

2006-07-16
	* version 3.2.0 released

2006-06-23
	* reorganized level editor element list a bit to match engines better

2006-06-21
	* fixed newly introduced bug with wrongly initializing clipboard element

2006-06-19
	* fixed bug with displaying visible/invisible level border in editor

2006-06-14
	* reorganized some elements in the level editor element list

2006-06-06
	* fixed bug with displaying any player as "yellow" when moving into acid
	* fixed bug with displaying running player when player stopped at border

2006-06-03
	* fixed bug with player exploding when moving into acid
	* fixed bug with level settings being reset in editor and when playing
	  (some compatibility settings being set not only after level loading)
	* fixed crash bug when number of custom graphic frames was set to zero
	* fixed bug with teleporting player on walkable tile not working anymore
	* added partial compatibility support for pre-release-only "CONF" chunk
	  (to make Alan Bond's "color cycle" demo work again :-) )

2006-05-30
	* fixed some bugs when displaying title screens from info screen menu
	* fixed bug which caused EMC doors #5 to #8 to be passable without keys

2006-05-20
	* changed file major version to 3 to reflect level file format changes
	* uploaded pre-release (test) version 3.2.0-8 binary and source code

2006-05-19
	* added new chunk "NAME" to level file format for level name settings
	* added new chunk "NOTE" to level file format for envelope settings
	* changed name of chunk "CONF" to "ELEM" (for normal element settings)
	* updated magic(5) file to recognize changed and new level file chunks
	* removed change events "change when CE value/score changes" as unneeded

2006-05-17
	* changed gravity (which only affects the player) from level property
	  to player property (only makes a difference in multi-player levels)
	* added change events "change when CE value/score changes"
	* added change events "change when CE value/score changes of <element>"

2006-05-16
	* added new chunk "INFO" to level file format for global level settings
	* added all element settings from "HEAD" chunk to "CONF" chunk
	* added all global level settings from "HEAD" chunk to "INFO" chunk

2006-05-09
	* changed level file format by adding two new chunks "CUSX" (for custom
	  elements, replacing the previous "CUS4" chunk) and "GRPX" (for group
	  elements, replacing the previous "GRP1" chunk); these new IFF style
	  chunks use the new and flexible "micro chunks inside chunks" technique
	  already used with the new "CONF" chunk (for normal element properties)
	  which makes it possible to easily extend the existing level format
	  (instead of using fixed-length chunks like before, which are either
	  too big due to reserved bytes for future use, or too small when those
	  reserved bytes have all been used and even more data should be stored,
	  requiring the replacement by new and larger chunks just like it went
	  with "CUS1" to "CUS4"); this whole problem now does not exist anymore

2006-05-06
	* added credits pages to the "credits" section that were really missing
	* added some missing element descriptions to the level editor
	* added down position of switchgate switch to the level editor
	  and allowed the use of both switch positions at the same time
	* changed use of "Insert" and "Delete" keys to navigate element list in
	  level editor to start of previous or next cascading block of elements

2006-05-05
	* added the possibility to view the title screen to the info screen menu
	* fixed some minor bugs with viewing title screens

2006-05-02
	* fixed bug with title (cross)fading in/out when using fullscreen mode

2006-04-30
	* fixed bug that forced re-defining of menu settings in local graphics
	  config file which are already defined in existing base config file
	* fixed small bug that caused door sounds playing when music is enabled

2006-04-29
	* added the possibility to define up to five title screens for each
	  level set that are displayed after loading using (cross)fading in/out
	  (this was added to display the various start images of the EMC sets)

2006-04-28
	* added "CE score gets zero [of]" to custom element trigger conditions
	* added setup option to display element token name in level editor

2006-04-19
	* added compatibility code for Juergen Bonhagen's menu artwork settings

2006-04-15
	* fixed bug with displaying wrong animation frame 0 after CE changes
	* fixed bug with creating invisible elements when light switch is on

2006-04-06
	* added selection between ECS and AGA graphics for EMC levels to setup

2006-04-04
	* adjusted font handling for various narrow EMC style fonts

2006-04-03
	* changed EM engine behaviour back to re-allow initial rolling springs

2006-04-02
	* fixed handling of over-large selectboxes (less error-prone now)
	* fixed bug when creating GE with walkable element under the player

2006-04-01
	* added use of "Insert" and "Delete" keys to navigate element list in
	  level editor to start of custom elements or start of group elements
	* added virtual elements to access CE value and CE score of elements:
	  - "CE value of triggering element"
	  - "CE score of triggering element"
	  - "CE value of current element"
	  - "CE score of current element"

2006-03-30
	* fixed "grass" to "sand" in older EM levels (up to file version V4)

2006-03-29
	* changed behaviour of network games with internal errors (because of
	  different client frame counters) from immediately terminating R'n'D
	  to displaying an error message requester and stopping only the game
	  (also to prevent impression of crashes under non command-line runs)
	* fixed playing network games with the EMC engine (did not work before)
	* fixed bug with not scrolling the screen in multi-player mode with the
	  focus on player 1 when all players are moving in different directions
	* fixed bug with keeping pointer to gadget even after its deallocation
	* fixed bug with allowing "focus on all players" in network games
	* fixed bug with player focus when playing tapes from network games

2006-03-22
	* uploaded pre-release (test) version 3.2.0-7 binary and source code

2006-03-19
	* code cleanup for game action control for R'n'D and EMC game engine

2006-03-18
	* fixed bug in multi-player movement with focus on both players
	* added option to control only the focussed player with all input

2006-03-14
	* added player focus switching to level tape recording and re-playing

2006-03-13
	* fixed some bugs in player focus switching in EMC and RND game engine

2006-03-11
	* added special Supaplex animations for Murphy digging and snapping
	* added special Supaplex animations for Murphy being bored and sleeping

2006-03-10
	* added four new yam yams with explicit start direction for EMC engine
	* fixed bug in src/libgame/text.c with printing text outside the window

2006-03-09
	* fixed small bug in EMC level loader (copyright sign in EM II levels)

2006-03-08
	* added delayed ignition of EM style dynamite when used in R'n'D engine
	* added limited movement range to EMC engine when focus on all players

2006-03-06
	* fixed bug with missing (zero) score values for native Supaplex levels

2006-03-05
	* added "continuous snapping" (snapping many elements while holding the
	  snap key pressed, without releasing the snap key after each element)
	  as a new player setting for more compatibility with the classic games

2006-03-04
	* finished scrolling for "focus on all players" in EMC graphics engine

2006-02-28
	* level sets with "levels: 0" are ignored for levels, but not artwork
	* fixed bug when scanning empty level group directories (endless loop)

2006-02-26
	* fixed bug with explosion graphic for player using "Murphy" graphic
	* fixed bug with explosion graphic if player leaves explosion in time
	* changed some descriptive text in setup menu to use medium-width font
	* added key shortcut settings for switching player focus to setup menu

2006-02-25
	* fixed bug with random value initialization when recording tapes
	* fixed bug with playing single player tapes when team mode activated

2006-02-22
	* fixed little bug when trying to switch to player that does not exist

2006-02-19
	* added player switching (visual and quick) to R'n'D and EM game engine
	* added setup option to select visual or quick in-game player switching

2006-02-16
	* added use of "Home" and "End" keys to handle element list in editor

2006-02-15
	* fixed bug with adding score when playing tape with EMC game engine
	* added steel wall border for levels using EMC engine without border
	* finally fixed delayed scrolling in EMC engine also for small levels

2006-02-12
	* fixed potential crash bug in WarnBuggyBase() (missing boundary check)

2006-02-11
	* fixed bug with CE change order in TestIfElementTouchesCustomElement()
	* fixed bug when displaying info element without action, but direction

2006-02-09
	* fixed minor graphical problems with springs smashing and slurping
	  (when using R'n'D style graphics instead of EMC style graphics)

2006-02-07
	* added scroll delay (as configured in setup) to EMC graphics engine

2006-02-06
	* improved screen redraw for EMC graphics engine (faster and smoother)
	* when not scrolling, do not redraw the whole playfield if not needed

2006-02-03
	* added multi-player mode for EMC game engine (with up to four players)

2006-01-28
	* added android (can clone elements) from EMC engine to R'n'D engine

2006-01-14
	* added spring bumper (reflects spring) from EMC engine to R'n'D engine

2006-01-11
	* added selectbox for initial player speed to player settings in editor

2006-01-11
	* version 3.1.2 created that is basically version 3.1.1, but with a
	  major bug fixed that prevented editing your own private levels
	* version 3.1.2 released

2006-01-09
	* added magic ball (creates elements) from EMC engine to R'n'D engine

2006-01-07
	* uploaded fixed pre-release version 3.2.0-6 binary and source code

2006-01-07
	* fixed bug when using "CE can leave behind <trigger element>"
	* added new change condition "(after/when) creation of <element>"
	* added new change condition "(after/when) digging <element>"
	* fixed bug accessing invalid gadget that caused crashes under Windows
	* deactivated new possibility for multiple CE changes per frame

2006-01-04
	* uploaded pre-release (test) version 3.2.0-6 binary and source code

2006-01-02
	* added animation types "ce_value" and "ce_score" to graphicsinfo.conf
	* fixed bug with not keeping CE value for moving CEs with only action
	* changed CE action selectboxes in editor to be only reset when needed

2006-01-01
	* added option "use artwork from element" for custom player artwork
	* added option "use explosion from element" for player explosions

2005-12-30
	* added cascaded element lists in the level editor
	* added persistence for cascaded element lists by "editorcascade.conf"
	* added dynamic element list with all elements used in current level
	* added possibility for multiple CE changes per frame (experimental)

2005-12-28
	* uploaded pre-release (test) version 3.2.0-5 binary and source code

2005-12-27
	* changed "score for each 10 seconds/steps left" to "1 second/step"
	* added own score for collecting "extra time" instead of sharing it
	* added change events "switched by player" and "player switches <e>"
	* added change events "snapped by player" and "player snaps <e>"
	* added "set player artwork: <element choice>" to CE action options
	* added change event "move of <element>"

2005-12-22
	* added "set player shield: off / normal / deadly" to CE action options
	* added new player option "use level start element" in level editor
	  to set the correct focus at level start to elements from which the
	  player is created later (this did not work before for cascaded CE
	  changes resulting in creation of the player; it is now also possible
	  to create the player from a yam yam which is smashed at level start)

2005-12-20
	* added "set player speed: frozen (not moving)" to CE action options
	* added "move player: l/r/u/d/trigger/-trigger" to CE action options

2005-12-17
	* added new player option "block snap field" (enabled by default) to
	  make it possible to show a snapping animation like in Emerald Mine

2005-12-16
	* added dynamic selectboxes to custom element action settings in editor
	* added "CE value" counter for custom elements (instead of "CE count")
	* added option to use the last "CE value" after custom element change
	* added option to use the "CE value" of other elements in CE actions
	* fixed odd behaviour when pressing time orb in levels w/o time limit
	* added checkbox "use time orb bug" for older levels that use this bug

2005-12-15
	* added missing configuration settings for the following elements:
	  - EL_TIMEGATE_SWITCH		(time of open time gate)
	  - EL_LIGHT_SWITCH_ACTIVE	(time of light switched on)
	  - EL_SHIELD_NORMAL		(time of shield duration)
	  - EL_SHIELD_DEADLY		(time of shield duration)
	  - EL_EXTRA_TIME		(time added to level time)
	  - EL_TIME_ORB_FULL		(time added to level time)

2005-12-14
	* added "wind direction" as a movement pattern for custom elements
	* added initial wind direction for balloon / custom elements to editor
	* added functionality for EL_BALLOON_SWITCH_NONE to R'n'D game engine

2005-12-13
	* added parameters for "game of life" and "biomaze" elements to editor

2005-12-12
	* added level file chunk "CONF" for generic level and element settings

2005-12-11
	* uploaded pre-release (test) version 3.2.0-4 binary and source code

2005-12-11
	* skip empty level sets (with "levels: 0"; may be artwork base sets)
	* added sound action ".page[1]" to ".page[32]" for each CE change page

2005-12-10
	* added image config suffix ".clone_from" to copy whole image settings
	* fixed bug with invalid ("undefined") CE settings in old level files

2005-12-05
	* fixed graphical bug with smashing elements falling faster than player

2005-12-03
	* fixed major bug which prevented private levels from being edited
	* fixed bug with precedence of general and special font definitions

2005-12-02
	* fixed graphical bug with player animation when player moves slowly

2005-11-29
	* uploaded pre-release (test) version 3.2.0-3 binary and source code

2005-11-28
	* fixed bug which prevented "global.num_toons: 0" from working

2005-11-27
	* major code cleanup (removed all these annoying "#if 0" blocks)

2005-11-26
	* added custom element actions for CE change page in level editor

2005-11-19
	* fixed music initialization bug in init.c (thanks to David Binderman)
	* fixed mouse wheel "button" bug in editor (thanks to Tomi Belan)
	  (this bug must probably be fixed at other places, too)

2005-10-16
	* fixed buggy '#include "SDL.h"' statements in src/libgame/sdl.h
	  (should be '#include <SDL.h>' instead)

2005-08-20
	* fixed bug which prevented "walkable from no direction" from working
	  (due to compatibility code overwriting this setting after loading)

2005-08-15
	* fixed bug on Mac OS X (use of reserved name "Random") in EM engine

2005-08-07
	* version number temporarily set to 3.1.1 (intermediate bugfix release)
	* version 3.1.1 released

2005-08-07
	* changed some va_arg() arguments from 'long' to 'int', fixing problems
	  on 64-bit architecture systems with LP64 data model

2005-08-06
	* fixed bug with bombs not exploding when hitting the last level line
	  (introduced after the release of 3.1.0)

2005-08-06
	* added support for dumping small-sized level sketches from editor

2005-07-24
	* added recognition of "trigger element" for "change digged element to"
	  (this is not really what the "trigger element" was made for, but its
	  use may seem obvious for leaving back digged elements unchanged)

2005-07-23
	* fixed multiple warnings about failed joystick device initialization

2005-06-27
	* fixed bug with dynamite dropped on top of just dropped custom element
	  (collect dynamite, collect CE, drop CE => dynamite was also dropped);
	  dynamite can still be dropped, but drop key must be released before

2005-06-27
	* fixed bug with wrong start directory when started from file browser
	  (due to this bug, R'n'D could not be started from KDE's Konqueror)

2005-06-26
	* fixed bug causing "change when impact" on player not working
	* fixed wrong priority of "hitting something" over "hitting <element>"
	* fixed wrong priority of "hit by something" over "hit by <element>"

2005-06-14
	* fixed graphical bug which caused the player (being Murphy) to show
	  collecting animations although the element was collected by penguin

2005-06-08
	* fixed two bugs causing wrong door background graphics in system.c
	  (in functions "SetBackgroundBitmap()" and "DrawingOnBackground()")

2005-06-06
	* fixed graphic bug with exploding bomb and R'n'D graphics in EM engine
	* added "no direction" to "walkable/passable from" selectbox options

2005-06-05
	* enhanced tape autoplay to accept "autoplay <set> [<nr> ...]" format
	* in tape autoplay, not only report broken, but also missing tapes

2005-05-31
	* uploaded pre-release (test) version 3.2.0-2 binary and source code

2005-05-27
	* fixed small bug with "linear" animation not working for active lamp

2005-05-24
	* fixed bug with moving up despite gravity due to "block last field"
	* fixed small bug with wrong draw offset when typing name in main menu
	* when reading user names from "passwd", ignore data after first comma
	* when creating new "levelinfo.conf", only write some selected entries

2005-04-28
	* fixed displaying "imported from/by" on preview with empty string
	* fixed ignoring draw offset for fonts used for level preview texts

2005-04-24
	* fixed a delay problem with SDL and too many mouse motion events
	* added setup option "skip levels" and level skipping functionality

2005-03-19
	* added move speed "not moving" for non-moving CEs, but with direction

2005-03-06
	* fixed mapping of obsolete element token names in "editorsetup.conf"
	* fixed bug with sound "acid.splashing" treated as a loop sound
	* fixed some little sound bugs in native EM engine

2005-02-20
	* fixed small bug when dragging scrollbars to end positions

2005-02-14
	* added editor element descriptions written by Aaron Davidson

2005-02-02
	* improved fallback handling when configured artwork is not available
	  (now using default artwork instead of exiting when files not found)

2005-02-01
	* fixed bug on level selection screen when dragging scrollbar

2005-01-19
	* fixed bug which caused broken tapes when appending to EM engine tapes

2005-01-17
	* uploaded pre-release (test) version 3.2.0-1 binary and source code

2005-01-17
	* added code to replace changed artwork config tokens with other tokens
	  (needed for backwards compatibility, so that older tokens still work)

2005-01-16
	* added native R'n'D graphics for some new EMC elements in EM engine

2005-01-15
	* fixed some bugs in the EM engine integration code
	* changed EM engine code to allow diagonal movement
	* changed EM engine code to allow use of separate snap and drop keys

2005-01-03
	* fixed some redraw bugs when using EM engine

2005-01-02
	* fixed bug with not converting RND levels which are set to use native
	  engine to native level structure when loading

2005-01-01
	* uploaded pre-release (test) version 3.2.0-0 binary and source code

2005-01-01
	* version number set to 3.2.0

2004-12-30
	* level data now reset to defaults after attempt to load invalid file

2004-11-13
	* added use of "editorsetup.conf" for different level sets

2004-10-26
	* added auto-detection for various types of Emerald Mine level files

2004-10-17
	* fixed bug with scrollbars getting too small when list is very large

2004-10-09
	* fixed bug with 3+3 (cross) sized explosion not making explosion sound

2004-10-04
	* added most level editor configuration gadgets for new EMC elements

2004-10-01
	* added more element and graphic definitions for new EMC elements

2004-09-27
	* modified native EM engine to use integrated R'n'D sound system

2004-09-21
	* added SDL support to graphics functions in native EM engine
	  (by always using generic libgame interface functions)

2004-09-20
	* fixed bug in frame synchronization in native EM engine

2004-09-18
	* added code to convert levels between R'n'D and native EM engine

2004-08-23
	* new Emerald Mine engine can now play levels selected in main menu

2004-08-16
	* fixed big memory leak in function "CreateBitmapWithSmallBitmaps()"
	  (which creates scaled down graphics for level editor and preview);
	  there's still a memory leak somewhere in the artwork handling code
	* added "scale image up" functionality to X11 version of zoom function

2004-08-14
	* first attempts to integrate new, native Emerald Mine Club engine

2004-08-07
	* fixed bug in gadget code which caused reset of CEs in level editor
	  (example: pressing 'b' [grab brush] on CE config page erased values)
	  (solution: check if gadgets in ClickOnGadget() are really mapped)
	* improved level change detection in editor (settings now also checked)
	* fixed bug with "can move into acid" and "don't collide with" state

2004-07-29
	* fixed maze runner style CEs to use the configured move delay value

2004-06-27
	* added Aaron Davidson's tutorial level set to the "Tutorials" section

2004-06-20
	* fixed engine change that broke 3.0.8 levels like "Walpurgis Gardens"
	* fixed the above fix because it broke level set "machine" (*sigh*)
	* fixed random element placement in level editor to work as expected
	* fixed undefined graphic of runtime element "EL_AMOEBA_TO_DIAMOND"

2004-06-15
	* re-recorded tape for BD2K3, level 010 (broken due to bugfix)

2004-06-13
	* fixed bug (missing array boundary check) which caused broken tapes
	* fixed bug (when loading level template) which caused broken levels
	* fixed bug with new block last field code when using non-yellow player

2004-06-12
	* fixed bug when pressing "stop, pause, stop, play" on tape recorder
	* internal change of how the player blocks the last field when moving
	* fixed blocking delay of last field for EM and SP style block delay
	* fixed bug where the player had to wait for the usual move delay after
	  unsuccessfully trying to move, when he directly could move after that
	* the last two changes should make original Supaplex level 93 solvable
	* improved use of random number generator to make it less predictable
	* fixed behaviour of slippery SP elements to let slip left, then right

2004-06-11
	* fixed bug with wrong door state after trying to quickload empty tape
	* fixed waste of static memory usage of the binary, making it smaller
	* fixed very little graphical bug in Supaplex explosion

2004-06-07
	* version number set to 3.1.1

2004-06-07
	* version 3.1.0 released

2004-06-07
	* fixed bug with crash when writing user levelinfo.conf the first time

2004-06-06
	* added option "convert LEVELDIR [NR]" to command line batch commands
	* re-converted Supaplex levels to apply latest engine fixes
	* changed "use graphic/sound of element" to "use graphic of element"
	  due to compatibility problems with some levels ("bug machine" etc.)

2004-05-23
	* fixed bug with CE change replacing player with same or other player

2004-05-16
	* fixed bug with opaque font in envelope with background graphic when
	  background graphic is not transparent itself

2004-05-12
	* added "gravity on" and "gravity off" ports for Supaplex compatibility
	* corrected original Supaplex level loading code to use these new ports
	* also corrected Supaplex loader to auto-count infotrons if set to zero

2004-05-10
	* fixed bug with missing initialization of "modified" flag for GEs

2004-05-09
	* fixed bug that caused endless recursion loop when relocating player
	* fixed tape recorder bug in "step mode" when using "pause before end"
	* fixed tape recorder bug when changing from "warp forward" mode

2004-05-08
	* fixed bug with "when touching" for pushed elements at last position

2004-05-05
	* fixed bug that caused two activated toolbox buttons in level editor
	* fixed bug with exploding dynabomb under player due to other explosion

2004-05-02
	* fixed bug with creating walkable custom element under player (again)
	* fixed bug with not copying explosion type when copying CEs in editor
	* fixed graphical bug when drawing player in setup menu (input devices)
	* fixed graphical bug when the player is pushing an accessible element
	* fixed bug with classic switchable elements triggering CE changes
	* fixed bug with entering/leaving walkable element in RelocatePlayer()
	* fixed crash bug when CE leaves behind the trigger player element

2004-04-30
	* fixed bug with broken tubes after placing/exploding dynamite in them
	* fixed bug with exploding dynamite under player due to other explosion
	* fixed bug with not resetting push delay under certain circumstances

2004-04-27
	* added option "handicap" for "levelinfo.conf" (thanks to Niko Böhm)
	* added network multiplayer code for Windows (thanks to Niko Böhm)

2004-04-25
	* added option "reachable despite gravity" for gravity movement
	* changed gravity movement of most classic walkable and passable
	  elements back to "not reachable" (for compatibility reasons)

2004-04-24
	* fixed (removed) "indestructible" / "can explode" dependency in editor
	* fixed (removed) "accessible inside" / "protected" dependency
	* fixed (removed) "step mode" / "shield time" dependency

2004-04-23
	* fixed dynabombs exploding now into anything diggable
	* fixed Supaplex style gravity movement into buggy base now impossible
	* added pressing key "space" as valid action to select menu options

2004-04-20
	* added "replace when walkable" to relocate player to walkable element
	* added "enter"/"leave" event for elements affected by relocation
	* fixed "direct"/"indirect" change order also for "when change" event
	* fixed graphical bug when pushing things from elements walkable inside

2004-04-18
	* fixed graphic bug when player is snapping while moving in old levels
	* fixed bug when a moving custom element leaves a player element behind
	* fixed bug with mole not disappearing when moving into acid pool
	* fixed bug with incomplete path setting when using "--basepath" option
	* moving CE can now leave walkable elements behind under the player
	* when relocating, player can be set on walkable element now
	* fixed another gravity movement bug

2004-04-12
	* uploaded pre-release (test) version 3.1.0-2 binary and source code

2004-04-10
	* added "collectible" and "removable" to extended replacement types
	  (where "removable" replaces "diggable" and "collectible" elements)
	* added "collectible & throwable" (to throw element to the next field)
	* fixed bug with CEs digging elements that are just about to explode
	* changed mouse cursor now always being visible when game is paused

2004-04-09
	* added possibility to push/press accessible elements from a side that
	  is not accessible
	* fixed bug with not setting actual date when appending to tape

2004-04-07
	* fixed bug with incorrectly initialized custom element editor graphics

2004-04-04
	* corrected set "Contributions_1995-2000/rnd_kjell_kristiansson":
	  - number of levels corrected from 18 to 17 in "levelinfo.conf"

2004-03-31
	* fixed bug with destroyed robot wheel still attracting robots forever
	* fixed bug with time gate switch deactivating after robot wheel time
	  (while the time gate itself is not affected by this misbehaviour)
	* changed behaviour of BD style amoeba to always get blocked by player
	  (before it was different when there were non-BD elements in level)
	* fixed bug with player destroying indestructable elements with shield

2004-03-26
	* added option to make growing elements grow into anything diggable
	  (for the various amoeba types, biomaze and "game of life")

2004-03-24
	* fixed bug with movable elements not moving after left behind by CEs
	* changed gravity movement to anything diggable, not only sand/base
	* optionally allowing passing to walkable element, not only empty space
	* added option "can pass to walkable element" for players
	* finally fixed gravity movement (hopefully)

2004-03-23
	* fixed bug with movable elements not moving anymore after falling down

2004-03-22
	* fixed another bug with custom elements digging and leaving elements
	* fixed bug with "along left/right side" and automatic start direction
	* trigger elements now also displayed when "more custom" deactivated
	* fixed bug with clipboard element initialized when loading new level
	* added option "drop delay" to set delay before dropping next element

2004-03-21
	* uploaded pre-release (test) version 3.1.0-1 binary and source code

2004-03-20
	* added copy and paste functions for custom change pages
	* enhanced graphical display and functionality of tape recorder
	* fixed bug with custom elements digging and leaving elements

2004-03-19
	* added move speed faster than "very fast" for custom elements
	* fixed bug with 3+3 style explosions and missing border content
	* fixed little bug when copying custom elements in the editor
	* enhanced custom element changes by more side trigger actions

2004-03-16
	* added option "no scrolling when relocating" for instant teleporting
	* uploaded pre-release (test) version 3.1.0-0 binary and source code

2004-03-15
	* added trigger element and trigger player to use as target elements
	* added copy and paste functions for custom and group elements

2004-03-14
	* fixed graphical bug when displaying explosion animations
	* fixed bug when appending to tapes, resulting in broken tapes
	* re-recorded a few tapes broken by fixing gravity checking bug

2004-03-13
	* "can move into acid" property now for all elements independently
	* "can fall into acid" property for player stored in same bitfield now
	* added option for deadliness of Supaplex 'sniksnak' and 'electron'
	* version number set to 3.1.0 (finally!)

2004-03-09
	* changed tape recording to only record input, not programmed actions

2004-03-08
	* fixed totally broken (every 8th frame skipped) step-by-step recording
	* fixed bug with requester not displayed when quick-loading interrupted
	* added option "can fall into acid (with gravity)" for players
	* fixed bug with player not falling when snapping down with gravity

2004-03-07
	* fixed bug which messed up key config when using keypad number keys

2004-03-03
	* fixed bug which allowed moving upwards even when gravity was active
	* fixed bug with missing error handling when dumping levels or tapes

2004-03-02
	* added different colored editor graphics for Supaplex gravity tubes

2004-03-01
	* fixed bug that allowed solvable tapes for unsolvable levels

2004-02-28
	* use unlimited number of droppable elements when "count" set to zero
	* added option to use step limit instead of time limit for level

2004-02-27
	* added player and change page as trigger for custom element change

2004-02-24
	* fixed bug with exploding amoeba (explosion 3x3 instead of 1x1)

2004-02-22
	* fixed bug with dark yamyam changing to acid when moving over acid
	* fixed handling of levels with more than 999 seconds level time
	  (example: level 76 of "Denmine")

2004-02-21
	* "spring push bug" reintroduced as configurable element property
	* fixed bug with missing properties for "mole"
	* fixed bug that showed up when fixing the above "mole" properties bug
	* added option "can move into acid" for all movable elements
	* fixed graphical bug for elements moving into acid
	* changed event handling to handle all pending events before going on

2004-02-17
	* fixed bug which caused all CE change pages to be ignored which had
	  the same change event, but used a different element side
	  (reported by Simon Forsberg)

	* fixed bug which caused elements that can move and fall and that are
	  transported by a conveyor belt to continue moving into that direction
	  after leaving the conveyor belt, regardless of their own movement
	  type; only elements which can not move are transported now
	  (reported by Simon Forsberg)

	* fixed bug which could cause an array overflow in RelocatePlayer()
	  (reported by Niko Böhm)

	* changed Emerald Mine style "passable / over" elements to "protected"
	  (fixing unsolvable level 10 of "Bondmine 9" with bug beside gate)

	* added new option to select from which side a "walkable/passable"
	  element can be entered

2004-02-16
	* added explosion and ignition delay for elements that can explode

2004-02-05
	* fixed bug which caused player not being protected against enemies
	  when a CE was "walkable / inside" and was not "indestructible"
	* added "walkable/passable" fields to be "protected/unprotected"
	  against enemies, even if not accessible "inside" but "over/under"

2004-02-04
	* corrected move pattern to 32 bit and initial move direction to 8 bit

2004-02-03
	* added second custom element base configuration page

2004-02-02
	* added some special EMC mappings to Emerald Mine level loader
	  (also covering previously unknown element in level 0 of "Bondmine 8")

2004-01-30
	* added option to block last field when player is moving (for Supaplex)
	* adjusted push delay of Supaplex elements
	* removed delays for envelopes etc. when replaying with maximum speed
	* fixed bug when dropping element on a field that just changed to empty

2004-01-29
	* fixed bug: infotrons can now smash yellow disks
	* fixed bug: when gravity active, port above player can now be entered
	* removed "one white dot" mouse pointer which irritated some people

2004-01-26
	* added "choice type" for group element selection

2004-01-25
	* fixed bug with initial invulnerability of non-yellow player

2004-01-23
	* added level loader for loading native Supaplex packed levels
	  (including multi-part levels like the "splvls99" levels)

2004-01-19
	* fixed bug which allowed creating emeralds by escaping explosions

2004-01-18
	* custom elements can change (limited) or leave (unlimited) elements
	* finally added multiple matches using group elements
	* added shortcut to dump brush (type ":DB" in editor) for use in forum

2004-01-17
	* added new start movement type "previous" for continued CE movement
	* added new start movement type "random" for random CE movement start

2004-01-17
	* added new element "sokoban_field_player" needed for Sokoban levels
	  (thanks to Ed Booker for pointing this out!)

2004-01-15
	* added elements that can be digged or left behind by custom elements

2004-01-12
	* added group elements for multiple matches and random element creation

2004-01-11
	* fixed some graphical errors displayed in old levels

2004-01-10
	* fixed wrong double speed movement after passing closing gates

2004-01-03
	* added level loader for loading native Emerald Mine levels

2004-01-02
	* changes for "shooting" style CE movement

2004-01-01
	* Happy New Year! ;-)

2003-12-27
	* changed default snap/drop keys from left/right Shift to Control keys

2003-12-27
	* fixed bug with dead player getting reanimated from custom element

2003-12-14
	* fixed bug with wrong penguin graphics (when entering exit)

2003-12-14
	* fixed bug with wrong "Murphy" graphics (when digging etc.)

2003-12-14
	* version number set to 3.0.9

2003-12-14
	* version 3.0.8 released

2003-12-13
	* added function checked_free()

2003-12-13
	* fixed bug with double nut cracking sound
	  (by eliminating "default element action sound" assignment in init.c)

2003-12-10
	* fixed crash when no music info files are available

2003-12-07
	* fixed boring and sleeping sounds

2003-12-05
	* added "maze runner" and "maze hunter" movement types
	* added extended collision conditions for custom elements

2003-12-03
	* added warnings for undefined token values in artwork config files

2003-12-02
	* added menu entry for level set information to the info screen

2003-12-02
	* fixed bug with wrong default impact sound for colored emeralds

2003-11-30
	* added several sub-screens for the info screen
	* menu text now also clickable (not only blue/red sphere left of it)

2003-11-25
	* added configurable "bored" and "sleeping" animations for the player
	* added "awakening" sound for player when waking up after sleeping

2003-11-22
	* added "copy" and "exchange" functions for custom elements to editor

2003-11-21
	* added configurable element animations for info screen

2003-11-20
	* added configurable music credits for info screen

2003-11-19
	* finally fixed tape recording when player is created from CE change

2003-11-18
	* added "editorsetup.conf" for editor element list configuration

2003-11-16
	* added "musicinfo.conf" for menu and level music configuration

2003-11-14
	* fixed a very nasty bug in dragon turning code in TurnRoundExt()
	  (that only showed up on Linux, but not on Windows systems)

2003-11-13
	* fixed turning movement of butterflies and fireflies (no frame reset)
	* enhanced sniksnak turning movement (two steps instead of only one)

2003-11-10
	* version number set to 3.0.8

2003-11-10
	* version 3.0.7 released

2003-11-09
	* fixed reset of player animation frame when, for example,
	  walking, digging or collecting share the same animation
	* fixed CE with "deadly when touching" exploding when touching amoeba

2003-11-08
	* fixed tape recording when player is created from CE element change

2003-11-04
	* introduced "turning..." action graphic for elements with move delay
	  (non-CE: bug, spaceship, sniksnak, mole, pacman, yamyam)
	* added turning animations for bug, spaceship and sniksnak

2003-11-03
	* prevent "extended" changed elements from delay change in same frame

2003-11-02
	* fixed bug when pushing element that can move away to the side
	  (like pushing falling elements, but now with moving elements)

2003-11-01
	* finally fixed serious bug in code for delayed element pushing (again)

2003-10-19
	* unavailable setup options now marked as "n/a" instead of "off"
	* new boolean directive "latest_engine" for "levelinfo.conf": when set
	  to "true", levels are always played with the latest game engine,
	  which is desired for levels that are imported from other games; all
	  other levels are played with the engine version stored in level file
	  (which is normally the engine version the level was created with)

2003-10-18
	* fixed serious bug in code for delayed element pushing
	* fixed little bug in animation frame selection for pushed elements
	* speed-up of reading config file for verbose output

2003-10-08
	* added configuration option for opening and closing Supaplex exit
	* added configuration option for moving up/down animation for Murphy
	* fixed incorrectly displayed animation for attacking dragon
	* fixed bug with not setting initial gravity for each new game
	* fixed bug with teleportation of player by custom element change
	* fixed bug with player not getting smashed by rock sometimes

2003-10-06
	* version number set to 3.0.7

2003-10-06
	* version 3.0.6 released

2003-10-05
	* added support for MP3 music for SDL version through SMPEG library

2003-10-03
	* fixed bug when initializing font graphic structure
	* fixed bug with animation mode "pingpong" when using only 1 frame
	* fixed bug with extended change target introduced in 3.0.5
	* fixed bug where passing over moving element doubles player speed
	* fixed bug with elements continuing to move into push direction
	* fixed bug with duplicated player when dropping bomb with shield on
	* added "switching" event for custom elements ("pressing" only once)
	* fixed switching bug (resetting flag when not switching but not idle)

2003-09-29
	* fixed element tokens for certain file elements with ".active" etc.

2003-09-29
	* version number set to 3.0.6

2003-09-29
	* version 3.0.5 released

2003-09-28
	* now four envelope elements available
	* font, background, animation and sound for envelope now configurable
	* main menu doors opening/closing animation type now configurable

2003-09-27
	* active/inactive sides configurable for custom element changes
	* new movement type "move when pushed" available for custom elements

2003-09-20
	* fixed bug in multiple config pages loader code that caused crashes

2003-09-13
	* enhanced (remaining low-resolution) Supaplex graphics

2003-09-13
	* version number set to 3.0.5

2003-09-13
	* version 3.0.4 released

2003-09-12	src/tools.c
	* fixed bug in custom definition of crumbled element graphics

2003-09-11	src/files.c
	* fixed bug in multiple config pages code that caused crashes

2003-09-08
	* version number set to 3.0.4

2003-09-08
	* version 3.0.3 released

2003-09-07
	* added music to Supaplex classic level set

2003-09-07	src/libgame/misc.c
	* added support for loading various music formats through SDL_mixer

2003-09-06	(various source files)
	* fixed several nasty bugs that may have caused crashes on some systems
	* added envelope content which gets displayed when collecting envelope
	* added multiple change event pages for custom elements

2003-08-24	src/game.c
	* fixed problem with player animation when snapping and moving

2003-08-23	src/screens.c, src/cartoons.c, src/libgame/toons.c
	* fixed problem with flickering when drawing toon animations

2003-08-23	src/libgame/sdl.c
	* fixed problem with setting mouse cursor in SDL version in fullscreen

2003-08-23	src/game.c
	* fixed bug (missing array boundary check) which could crash the game

2003-08-23
	* version number set to 3.0.3

2003-08-22
	* version 3.0.2 released

2003-08-21	src/game.c
	* fixed bug with creating inaccessible elements at player position

2003-08-20	src/init.c
	* fixed bug with not finding current level artwork directory

2003-08-20	src/files.c
	* fixed bug with choosing wrong engine version when playing tapes
	* fixed bug with messing up custom element properties in 3.0.0 levels

2003-08-18
	* version number set to 3.0.2

2003-08-18
	* version 3.0.1 released

2003-08-17	(no source files affected)
	* changed all "classic" PCX image files with 16 colors or less to
	  256 color (8 bit) storage format, because the Allegro game library
	  cannot handle PCX files with less than 256 colors (contributed
	  graphics are not affected and might look wrong in the DOS version)

2003-08-16	src/init.c
	* fixed bug which (for example) crashed the level editor when defining
	  "dynamite.EDITOR:  [NONE]", because graphics may not be undefined
	  (only set to default) -- invalid graphics now set to default graphic

2003-08-16	src/init.c
	* fixed graphical bug of player digging/collecting/snapping element
	  when no corresponding graphic/animation is defined for this action,
	  resulting in player being drawn as EL_EMPTY (which should only be
	  done to elements being collected, but not to the player)

2003-08-16	src/game.c
	* fixed small graphical bug of player not totally moving into exit

2003-08-16	src/libgame/setup.c
	* fixed bug with wrong MS-DOS 8.3 filename conversion

2003-08-16	src/tools.c
	* fixed bug with invisible mouse cursor when pressing ESC while playing

2003-08-16	(various source files)
	* added another 128 custom elements (disabled in editor by default)

2003-08-16	src/editor.c
	* fixed NULL string bug causing Solaris to crash in sprintf()

2003-08-16	src/screen.c
	* fixed drawing over scrollbar on level selection with custom fonts

2003-08-15	src/game.c
	* cleanup of simple sounds / loop sounds / music settings

2003-08-08	(various source files)
	* added custom element property for dropping collected elements

2003-08-08	src/conf_gfx.c
	* fixed bug with missing graphic for active red disk bomb

2003-08-07	src/files.c, src/editor.c src/game.c, src/main.h
	* extended variable "level.gravity" to "level.initial_gravity" and
	  "game.current_gravity" to prevent level setting from being changed
	  by playing the level (keeping the runtime value after playing)

	* fixed graphics bug when digging element that has 'crumbled' graphic
	  definition, but not 'diggable' graphic definition

2003-08-06
	* version number set to 3.0.1

2003-08-05
	* version 3.0.0 released

2003-08-05
	* various bug fixes; among others:
	  - fixed bug with pushing spring over empty space
	  - fixed bug with leaving tube while placing dynamite
	  - fixed bug with explosion of smashed penguins
	  - allow Murphy player graphic in levels with non-Supaplex elements

2003-04-07
	* various changes
	* I have forgotten to document changes for some time

2002-12-31
	* pre-release version 2.2.0rc1 released

2002-08-25	src/libgame/setup.c, src/libgame/sound.c
	* Level series artwork now configurable via level series config file.
	  "levelinfo.conf" may now contain directives "graphics_set",
	  "sounds_set" and "music_set" to select artwork sets which are
	  globally defined or which are included into other level series.

2002-08-25
	* version number set to 2.1.2

2002-08-13
	* version 2.1.1 released

2002-08-10	src/libgame/system.h
	* Default "snap" and "bomb" keys for Mac OS X set to left control key
	  and keypad enter key -- Macs seem not to distinguish between left
	  and right modifier keys (both generate scan code for left key). :-(

2002-08-10	src/libgame/sound.c
	* Fixed small NetBSD compilation bug.
	  Thanks to Adam Ciarcinski for the bug report.

2002-08-10	src/libgame/sound.c
	* Added support for audio device "/dev/sound/dsp" (devfs).
	  Thanks to Christoph Bauer for the corresponding report.

2002-08-10	src/libgame/sound.c
	* Bug fixed that caused regular crashes under SDL/Windows version.
	  Mixer_InsertSound(): Always stop music before playing new music,
	  else "mixer_active_channels" can get fucked up.
	  Thanks to Keith Peterston for the bug report.

2002-08-10
	* version number set to 2.1.1

2002-08-05
	* version 2.1.0 released

2002-05-31	src/libgame/image.c
	* Read_PCX_to_Pixmap(): Fixed bad memory leak by freeing "ximageinfo"
	  and "image" after converting loaded PCX image file to X11 Pixmap.
	  This really showed up when reloading custom artwork several times.

2002-05-20	src/libgame/sound.c
	* added support for 16 bit WAV sound files

2002-05-19
	* version number set to 2.1.0

2002-04-03 to 2002-05-19	(various source files)
	* graphics, sounds and music now fully configurable
	* bug fixed that prevented walking through tubes when gravity on
	* added support for TrueColor PCX graphics files
	* enhanced sound system (especially regarding stereo and loop sounds)

2002-04-02	src/events.c, src/editor.c
	* Make Escape key less aggressive when playing or when editing level.
	  This can be configured as an option in the setup menu. (Default is
	  "less aggressive" which means "ask user if something can be lost"
	  when pressing the Escape key.)

2002-04-02	src/screen.c
	* Added "graphics setup" screen.

2002-04-01	src/screen.c
	* Changed "choose level" setup screen stuff to be more generic (to
	  make it easier to add more "choose from generic tree" setup screens).

2002-04-01	src/config.c, src/timestamp.h
	* Added source files "src/config.[ch]" and "src/timestamp.h" (which
	  automatically gets created by "src/Makefile" and contains an actual
	  compile-time timestamp to identify development versions of the game).

2002-04-01	src/libgame/misc.c
	* Added (currently incomplete) function "getKeyFromKeyName()" simply
	  for orthogonality. When really needed, this function must be
	  extended accordingly (analog to "getKeyFromX11KeyName()").

2002-04-01	src/libgame/setup.c
	* Changed setup "TYPE_KEY" (internal, X11 style key symbol name) to
	  "TYPE_KEY_X11" and added "TYPE_KEY" (human readable key symbol name).
	  (This was needed for custom key setup handling in "src/screens.c".)

2002-03-31	src/tape.c, src/events.c
	* Added quick game/tape save/load functions to tape stuff which can be
	  invoked by a keyboard shortcut. Default: "F1" saves game/tape, "F2"
	  loads previously recorded tape and directly goes into recording mode
	  from the end of the tape (therefore appending to the tape).

2002-03-31	src/tape.c
	* Added "index mark" function to tape recorder. When playing or
	  recording, "eject" button changes to "index" button. Setting index
	  mark is not yet implemented, but pressing index button when playing
	  allows very quick advancing to end of tape (when normal playing),
	  very fast forward mode (when playing with normal fast forward) or
	  very fast reaching of "pause before end of tape" (when playing with
	  "pause before end" playing mode).

2002-03-30	src/cartoons.c
	* Moved some stuff from cartoons.c to the new "src/libgame/toons.c".

2002-03-30	src/libgame/toons.c
	* New libgame source file "toons.c" for the program independant part
	  of the toon stuff.

2002-03-29	src/screen.c
	* Changed setup screen stuff to be more generic (to make it easier
	  to add more setup screens).

2002-03-29	src/libgame/setup.c
	* Changed "LoadLevelInfoFromLevelDir()" so that not only directories
	  with level sub-directories are recognized, but also directories
	  that directly contain level files.

2002-03-29	src/libgame/sound.c
	* Changed "boolean stereo = TRUE;" to "static boolean stereo = TRUE;".
	  (This was a bug that showed up only when in mono audio mode.)

2002-03-24	src/libgame/x11.c, src/libgame/sdl.c, src/libgame/image.c
	* Changed image loading code to not exit on error, but set error by
	  using "SetError()" accordingly. Image loading errors must now be
	  catched by above layers (src/init.c for example).

2002-03-24	src/libgame/misc.c
	* New functions "SetError()" and "GetError()" to provide more
	  flexible error handling.

2002-03-23	src/main.c, src/main.h
	* Various changes due to the introduction of the new libgame files
	  "setup.c" and "joystick.c".

2002-03-23	src/files.c
	* Generic parts of "src/files.c" (mainly setup and level directory
	  stuff) moved to new libgame file "src/libgame/setup.c".

2002-03-23	src/joystick.c
	* File "src/joystick.c" moved to libgame source tree, with
	  correspondig changes.

2002-03-23	src/libgame/system.c, src/libgame/system.h
	* Various changes due to the introduction of the new files "setup.c"
	  and "joystick.c".

2002-03-23	src/libgame/setup.c
	* New libgame source file "setup.c" that contains now most setup and
	  level directory stuff previously handled in "src/files.c".

2002-03-23	src/libgame/joystick.c
	* New libgame source file "joystick.c" that contains now all joystick
	  stuff previously handled in "src/joystick.c" of "Rocks'n'Diamonds".

2002-03-22	src/screens.c
	* "HandleChooseLevel()": Another bug in level series navigation fixed.
	  (Wrong level series information displayed when entering main group.)

2002-03-22	src/editor.c
	* Slight change to support new gadget event "GD_EVENT_INFO_LEAVING".

2002-03-22	src/editor.c
	* Changed behaviour of "Escape" key in level editor to be more
	  intuitive: When in "Element Properties" or "Level Info" mode,
	  return to "Drawing Mode" instead of leaving the level editor.

2002-03-22	src/libgame/misc.c, src/libgame/sound.c
	* Added command line option "-s" / "--sounds" and "-m" / "--music"
	  to specify alternative sound and music directories. (The former
	  shortcut "-s" for "--serveronly" has changed accordingly.)

2002-03-22	src/libgame/gadgets.c
	* Added new gadget events for displaying gadget info texts:
	  "GD_EVENT_INFO_ENTERING" and "GD_EVENT_INFO_LEAVING". Before,
	  the info text callback function was only called when entering
	  a gadget (implicit "GD_EVENT_INFO_ENTERING"). But the info text
	  was never erased. This can now be done by checking the event type
	  in the info callback function.

2002-03-21	src/game.c, src/editor.c, src/files.c
	* 2.0.1 introduced the corrected "Emerald Mine" style behaviour of
	  gems (emeralds, diamonds, ...) slipping down from normal wall,
	  steel wall and growing wall (as in E.M.C. style levels). Although
	  the behaviour of contributed and private levels wasn't changed (due
	  to the use of "level.game_version"; see previous entry), editing
	  those levels will (of course) change the behaviour accordingly.

	  This change seems a bit too hard after thinking about it, because
	  the EM style behaviour is not the "expected" behaviour (gems would
	  normally only slip down from "rounded" walls). Therefore this was
	  now changed to an element property for gem style elements, with the
	  default setting "off" (which means: no special EM style behaviour).
	  To fix older converted levels, this flag is set to "on" for pre-2.0
	  levels that are neither contributed nor private levels.

2002-03-20	src/files.h
	* Corrected settings for "level.game_version" depending of level type.
	  (Contributed and private levels always get played with game engine
	  version they were created with, while converted levels always get
	  played with the most recent version of the game engine, to let new
	  corrections of the emulation behaviour take effect.)

2002-03-20	src/main.h
	* Added "#include <time.h>". This seems to be needed by "tape.c" for
	  compiling the SDL version on some systems.
	  Thanks to the several people who pointed this out.

2002-03-20	src/libgame/gadgets.c
	* "va_arg(ap, boolean)" changed to "(boolean)va_arg(ap, int)";
	  this caused problems especially on PowerPC architecture (although
	  it is wrong on i386 and other architectures, too)

2002-03-20	src/libgame/pcx.c, src/libgame/image.c
	* Added support for loading and displaying true-color PCX files.

2002-03-20	src/libgame/misc.c, src/libgame/x11.c
	* Added command line option "-g" / "--graphics" to specify an
	  alternative graphics directory.

2002-03-19
	* Version number set to 2.0.2.

2002-03-19
	* Version 2.0.1 released.

2002-03-19	src/libgame/system.c, src/libgame/sdl.c [src/tools.c]
	* Moved function "GetPixel()" from src/tools.c ("Mirror Magic" code)
	  to libgame source files; needed for SDL fullscreen bug workaround
	  to work correctly.

2002-03-18	src/screens.c
	* "HandleChooseLevel()": Small bug in level series navigation fixed.

2002-03-18	src/files.c [src/libgame/misc.c]
	* Moved some common functions from src/files.c to src/libgame/misc.c.

2002-03-18	src/files.c [src/libgame/misc.c]
	* Changed permissions for new directories and saved files (especially
	  score files) according to suggestions of Debian users and mantainers.
	  Thanks to Drew Parsons <dparsons@emerall.com> for the patch.

2002-03-18	src/libgame/misc.c [src/files.c]
	* Moved some common functions from src/files.c to src/libgame/misc.c.

2002-03-18	src/libgame/misc.c [src/files.c]
	* Changed permissions for new directories and saved files (especially
	  score files) according to suggestions of Debian users and mantainers.
	  Thanks to Drew Parsons <dparsons@emerall.com> for the patch.

2002-03-17	src/files.c
	* Changed "{Load|Save}{Level|Tape}()" to IFF style file format:
	  Replaced "cookie" header string ("ROCKSNDIAMONDS_...\n") with
	  real IFF style header "RND1....XXXX" (where "XXXX" is "CAVE"
	  for levels and "TAPE" for tapes). Old "cookie" style format is
	  still supported for reading. New level and tape files are written
	  in new format.

	* New IFF chunk "VERS" contains version numbers for file and game
	  (where "game version" is the version of the program that wrote the
	  file, and "file version" is a version number to distinguish files
	  with different format, for example after adding new features).

2002-03-17	src/libgame/sound.c
	* Bug in "StopMusic()" fixed: SDL_mixer functions may be called
	  even when sound not available.
	  Thanks to Drew Parsons <dparsons@emerall.com> for the patch.

2002-03-15	src/screen.c
	* "DrawHallOfFame()": "FadeSounds()" when entering the hall of fame.
	  (Before, you heard a mixture of the in-game music and the
	  hall-of-fame music.)

2002-03-15	src/libgame/sound.c, src/libgame/platform.h
	* Added /dev/dsp (streaming audio) support for NetBSD (instead of the
	  /dev/audio (ulaw) based Unix audio interface).
	  Thanks to Krister Walfridsson <cato@df.lth.se> for the patches.

2002-03-15	src/libgame/sdl.c
	* Workaround for fullscreen bug in WIN32 version of SDL (at least
	  in the currently actual version 1.2.3) by using "standard" screen
	  resolutions like 800x600 and mapping all input (mouse events) and
	  output (screen drawing) accordingly.

2002-03-14	src/events.c
	* Function "DumpTape()" (files.c) now available by pressing 't' from
	  main menu (when in DEBUG mode).

2002-03-14	src/game.c
	* "GameWon()": When game was won playing a tape, now there is no delay
	  raising the score and no corresponding sound is played.

2002-03-14	src/files.c
	* Changed "LoadTape()" for real chunk support and also adjusted
	  "SaveTape()" accordingly.

2002-03-14	src/game.c, src/tape.c, src/files.c
	* Important changes to tape format: The old tape format stored all
	  actions with a real effect with a corresponding delay between the
	  stored actions. This had some major disadvantages (for example,
	  push delays had to be ignored, pressing a button for some seconds
	  mutated to several single button presses because of the non-action
	  delays between two action frames etc.). The new tape format just
	  stupidly records all device actions and replays them later. I really
	  don't know why I haven't solved it that way before?! Old-style tapes
	  (with tape file version less than 2.0) get converted to the new
	  format on-the-fly when loading and can therefore still be played;
	  only some minor parts of the old-style tape handling code was needed.
	  (A perfect conversion is not possible, because there is information
	  missing about the device actions between two action frames.)

2002-03-14	src/files.c
	* New function "DumpTape()" to dump the contents of the current tape
	  in a human readable format.

2002-03-14	src/game.c
	* Small tape bug fixed: When automatically advancing to next level
	  after a game was won, the tape from the previous level still was
	  loaded as a tape for the new level.

2002-03-14	src/tape.c
	* Small graphical bug fixed: When pressing ""Record" or "Play" on
	  tape, cartoons did not get completely removed because
	  StopAnimation() was not called.

2002-03-13	src/files.c
	* Changed "LoadLevel()" and "SaveLevel()" to add new chunk "CNT2".
	  Fixed bug of "CONT" and "BODY" (chunk size was set to 8-bit element
	  size even when using 16-bit elements). Added new chunk "CNT2" for
	  16-bit amoeba content (previously written in 8-bit field in "HEAD"
	  chunk even when content was 16-bit element). "CNT2" should now be
	  able to store content for arbitrary elements (up to eight blocks of
	  3 x 3 element arrays). All "CNT2" elements will always be stored as
	  16-bit elements. "CONT" (with 8/16-bit elements) now obsolete.

2002-03-13	src/files.c
	* Changed "LoadLevel()" for real chunk support.

2002-03-12	src/game.c
	* Fixed problem (introduced after 2.0.0 release) with penguins
	  not getting killed by enemies

2002-02-28	src/libgame/sound.c
	* Fixed small problem with new SDL_Mixer 1.2.1:
	  Mix_VolumeMusic() must be called _after_ Mix_PlayMusic(),
	  or it has no effect.

2002-02-24	src/game.c, src/main.h
	* Added "player->is_moving"; now "player->last_move_dir" does
	  not contain any information if the player is just moving at
	  the moment or not.
	  Before, "player->last_move_dir" was misused for this purpose
	  for  the robot stuff (robots don't kill players when they are
	  moving). But setting "player->last_move_dir" to MV_NO_MOVING
	  broke tapes when walking through pipes!
	  ("IS_MOVING()" uses "MovPos[][]", but this fails when it is 0
	  in a continuous movement. This fact is ignored for friends and
	  enemies, though.)
